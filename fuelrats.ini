; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Open custom window, hash table action, set & unset some vars
on *:LOAD: {
  ratsignal_startvars
  ratsignal_window
  ratsignal_make_htables
  ratsignal_count_timer
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
on *:START: {
  ;  ratsignal_startvars
  ratsignal_window
  ratsignal_make_htables
  ratsignal_repopulate_listbox_active1
  ratsignal_count_timer
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
on *:EXIT: {
  ratsignal_save_htables
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; RATSIGNAL - CMDR volwrath - System: Tiethay - Platform: PC - O2: OK - Language: English (en-US) (Case #9)
;;; RATSIGNAL - CMDR seancassidy145 - System: Scorpii Sector ZE-A c19 - Platform: PC - O2: OK - Language: English (en-US) - IRC Nickname: seancassidy145 (Case #2)
on *:text:*RATSIGNAL*:#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    ratsignal_window
    ratsignal_speak $1-
    ratsignal_parse_0 $1-
    ratsignal_quiet
    hadd -m ratsignal_blob $ctime $asctime($ctime) $1-
    ratsignal_count
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; David_Windlow's case opened with: "R@SIGNAL Puppis Sector YE-R A4-6 PC"  (Case 0, PC, Puppis Sector YE-R a4-6)
on *:text:*case opened with*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    ratsignal_window
    myspeak Manual ratsignal
    ratsignal_parse_manual $1-
    ratsignal_quiet
    hadd -m ratsignal_blob $ctime $asctime($ctime) $1-
    ratsignal_count
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
on *:text:Received R@SIGNAL*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    ratsignal_window
    myspeak Self ratsignal
    ratsignal_parse_self $1-
    ratsignal_quiet
    hadd -m ratsignal_blob $ctime $asctime($ctime) $1-
    ratsignal_count
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Case Albert Einstein cleared! Lawrence Crawley, do the Paperwork: http://t.fuelr.at/27a
;;; Case Pazter cleared! Do the Paperwork: http://t.fuelr.at/1pw
on *:text:*cleared!*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    if ($1 == Case) {
      ratsignal_clear_0 $1-
      hadd -m ratsignal_blob $ctime $asctime($ctime) $1-
      ratsignal_count
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Clapton[Dispatch]: Closing case of client_10894 (Case #8ee339d4-6282-4eb6-a8e9-0bbae1bb21fd) and adding it to the Marked for Deletion List™.
;;; esxste: Closing case of HELPPP (Case #72d3b975-c2df-4e14-97b2-5244ba15b221) and adding it to the Marked for Deletion List™.
on *:text:*adding it to the Marked for Deletion List*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    hadd -m ratsignal_blob $ctime $asctime($ctime) $1-
    echo -t @TEST !md $1-7
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Catches !delete
on *:text:*THIS IS NOT REVERTABLE*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    echo -tg %ratsignal.WINDOWNAME 10 $+ $1 4 $+ $2 10 $+ $3 $6
    hadd -m ratsignal_blob $ctime $asctime($ctime) $1-
    ;ratsignal_log_reload
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; <%MechaSqueak[BOT]> CODE RED! MortisDeum is on emergency oxygen.
on *:text:CODE RED!*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    if ($regex($1-,CODE RED! (.*) is on emergency oxygen) > 0) {
      var %cr_cmdr $cmdr_to_irc($strip($regml(1)))
      hadd ratsignal_active %cr_cmdr $puttok($hget(ratsignal_active,%cr_cmdr),NOTOK,3,59)
      echo -t %ratsignal.WINDOW %cr_cmdr is now on emergency oxygen.
    }
    ratsignal_repopulate_listbox_active1
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; <%MechaSqueak[BOT]> Jennifer Shepard's case is no longer CR.
on *:text:*is no longer CR.:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    if ($regex($1-,(.*)'s case is no longer CR) > 0) {
      var %cr_cmdr $cmdr_to_irc($strip($regml(1)))
      hadd ratsignal_active %cr_cmdr $puttok($hget(ratsignal_active,%cr_cmdr),OK,3,59)    
      echo -t %ratsignal.WINDOW %cr_cmdr is no longer CR
    }
    ratsignal_repopulate_listbox_active1
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;<%MechaSqueak[BOT]> The_Armed_501st: Jaguar5033's platform set to XB
;<%MechaSqueak[BOT]> Uvelius_Sang[PC]: h3yoka's platform set to PC
on *:text:*platform set to*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    if ($regex($2-,(.*)'s platform set to (PC|XB)) > 1) {
      var %plat_cmdr $cmdr_to_irc($strip($regml(1)))
      var %plat_plat $strip($regml(2))
      hadd ratsignal_active %plat_cmdr $puttok($hget(ratsignal_active,%plat_cmdr),%plat_plat,4,59)
      echo -t %ratsignal.WINDOW ! $+ %plat_plat %plat_cmdr
    }
    ratsignal_repopulate_listbox_active1
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; ravenmadcat's case is now active
on *:TEXT:*case is now active:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    if ($regex($1-,/^(.*)'s.*/) > 0) {
      ;      ratsignal_move_active $cmdr_to_irc($remove($regml(1),'s)) ratsignal_inactive
      echo -t %ratsignal.WINDOWNAME 10 $+ $1-
      hadd -m ratsignal_blob $ctime $asctime($ctime) $1-
      if $hget(ratsignal_inactive,$cmdr_to_irc($remove($regml(1),'s))) { hdel ratsignal_inactive $cmdr_to_irc($remove($regml(1),'s)) }
      ratsignal_repopulate_listbox_active1
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; ravenmadcat's case is now inactive
on *:TEXT:*case is now inactive:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    if ($regex($1-,/^(.*)'s.*/) > 0) {
      ;      ratsignal_move_inactive $cmdr_to_irc($remove($regml(1),'s)) ratsignal_active
      echo -t %ratsignal.WINDOWNAME 10 $+ $1-
      hadd -m ratsignal_blob $ctime $asctime($ctime) $1-
      ratsignal_copy_inactive $cmdr_to_irc($remove($regml(1),'s)) ratsignal_active
      ratsignal_repopulate_listbox_active1
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Client for case 6 is now CMDR Angry Feetus
on *:text:Client for case*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    ;echo -t %ratsignal.WINDOWNAME 10 $+ $1-
    loadbuf 250 -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
    if (%ratsignal.speak.override == $true) myspeak Case $4 updated to $8-

    var %case = $chr(35) $+ $4
    var %cmdr = $8-
    hadd -m ratsignal_casenum %case %cmdr $+ $chr(59) $+ $ctime
    hadd -m ratsignal_blob $ctime $asctime($ctime) $1-
    echo -t %ratsignal.WINDOWNAME !cmdr %case %cmdr

    ;;; Locate and rename the hashtable entry. Search the ratsignal_active hashtable for an entry with a matching case number and rename it if only one is found, else echo number of matches.
    if ($hfind(ratsignal_active,%case,0,r).data = 1) {
      ratsignal_rename $hfind(ratsignal_active,%case,1,r).data $cmdr_to_irc($8-) ratsignal_active
      if $hfind(ratsignal_inactive,%case,1,r).data {
        ratsignal_rename $hfind(ratsignal_inactive,%case,1,r).data $cmdr_to_irc($8-) ratsignal_inactive
        echo -t @TEST Renaming inactive $cmdr_to_irc($8-) $puttok($hget(ratsignal_inactive,$cmdr_to_irc($8-)),$8-,1,59)
        hadd -m ratsignal_inactive $cmdr_to_irc($8-) $puttok($hget(ratsignal_inactive,$cmdr_to_irc($8-)),$8-,1,59)
      }
      hadd ratsignal_active $cmdr_to_irc($8-) $puttok($hget(ratsignal_active,$cmdr_to_irc($8-)),$8-,1,59)
    }
    else { echo -t %ratsignal.WINDOWNAME $hfind(ratsignal_active,%case,0,r).data matches for Case %case, cannot update ratsignal_active hashtable }

    ratsignal_save_htables
    ratsignal_repopulate_listbox_active1
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; [Dspatch]: Location of Zher0h set to V1090 Herculis
; Tom_X[PC]: Location of Deltron Osiris set to col 285 sector rk-a a16-1 (not in EDSM)
; Stillian[PC|Dispatch]: Location of Crucifix set to Alrai Sector CB-O a6-0
on *:text:*Location of*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    ;    echo -t %ratsignal.WINDOWNAME 10 $+ $2-
    loadbuf 250 -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
    hadd -m ratsignal_blob $ctime $asctime($ctime) $1-
    if ($regex(CMDR,$2-,Location of (.*) set to) > 0) {
      if ($numtok($hget(ratsignal_active,$cmdr_to_irc($regml(CMDR,1))),59) > 4) {
        if ($regex(SYST,$2-,set to (.*)) > 0) {
          set %ratsignal.NEW.SYSTEM $regml(SYST,1)
          echo -t %ratsignal.WINDOWNAME 11 $+ $cmdr_to_irc($regml(CMDR,1)) $+  !sys: $+ 8 $regml(SYST,1) $+ 
          hadd -m ratsignal_active $cmdr_to_irc($regml(CMDR,1)) $puttok($hget(ratsignal_active,$cmdr_to_irc($regml(CMDR,1))),$regml(SYST,1),5,59)
          if $hfind(ratsignal_inactive,$cmdr_to_irc($regml(CMDR,1)),1).data { 
            echo -t @TEST Updating existing inactive $cmdr_to_irc($8-) $puttok($hget(ratsignal_inactive,$cmdr_to_irc($8-)),$8-,1,59)
            hadd -m ratsignal_inactive $cmdr_to_irc($regml(CMDR,1)) $puttok($hget(ratsignal_inactive,$cmdr_to_irc($regml(CMDR,1))),$regml(SYST,1),5,59)
          }
          ratsignal_repopulate_listbox_active1
          ratsignal_save_htables
        }
      }
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Capture UUID's
;; $regex($cb,/[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}/)
;; Catches UUID on !quote
on *:TEXT:*) opened*:*: {
  if ($nick == MechaSqueak[BOT]) {
    if ($regex($1-,/(.*) at/i) > 0) {
      var %ratsignal.quote.echoline1T = $remove($regml(1),'s,case )
      if ($regex($1-,/@(.*)/i) > 0) {
        var %ratsignal.quote.echoline2T = $regml(1)
      }
    }
    if ($regex($1-,/(.*)'s case/i) > 0) {
      ; $regml(1) holds CMDR Name
      set %ratsignal.quote.cmdrT $cmdr_to_irc($regml(1))
    }

    if ($regex($1-,/case (.*) at/i) > 0) {
      ; $regml(1) holds Case # (with #)
      set %ratsignal.quote.case $regml(1)
    }

    if ($regex($1-,/\@(.*)/i) > 0) {
      ; $regml(1) holds UUID

      if ($hfind(ratsignal_uuid,%ratsignal.quote.cmdrT,0,n) > 0) {
        if (%ratsignal.test.flag == $true) { echo -tg %ratsignal.WINDOWNAME 10UUID: Updating %ratsignal.quote.echoline1T }
        hadd ratsignal_uuid %ratsignal.quote.cmdrT %ratsignal.quote.case $+ $chr(59) $+ $regml(1) $+ $chr(59) $+ $ctime
        hadd -m ratsignal_blob $ctime $asctime($ctime) $1-
        ratsignal_save_htables
        halt
      }

      hadd ratsignal_uuid %ratsignal.quote.cmdrT %ratsignal.quote.case $+ $chr(59) $+ $regml(1) $+ $chr(59) $+ $ctime
      ratsignal_save_htables
      if (%ratsignal.test.flag == $true) {
        echo -t %ratsignal.WINDOWNAME 10 $+ [ %ratsignal.quote.echoline1T %ratsignal.quote.echoline2T ]
        loadbuf 250 -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
      }
    }

  }
}

;on *:TEXT:*R@SIGNAL*:*: {
;if ($nick == MechaSqueak[BOT]) {
;var %rsig = $regsubex($1-,\[[0-9]\],$null)
;var %rsig = $regsubex(%rsig,.*(@).*,RATSIGNAL)
;var %rsig = $ratsignal_parse_1(%rsig %ratsignal.quote.case)
;echo -s %rsig
;}
;}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Calculates number of active + inactive cases when someone does a !list
on *:text:*active case*:?,#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    set %ratsignal.last.list $1-
    if ($regex($1-,/(.*) active/) > 0) {
      set -u60 %ratsignal.botcases.active $regml(1)
      if (%ratsignal.botcases.active == No) { set -u60 %ratsignal.botcases.active 0 }
    }
    if ($regex($1-,/; (.*) inactive/) > 0) {
      set -u60 %ratsignal.botcases.inactive $regml(1)
      if (%ratsignal.botcases.inactive == No) { set -u60 %ratsignal.botcases.inactive 0 }
    }
    set -u60 %ratsignal.BOTCASES $calc(%ratsignal.botcases.active + %ratsignal.botcases.inactive)

    if (($chan == #fuelrats) || ($chan == #RatChat)) {
      echo -tg %ratsignal.WINDOWNAME 7 $+ $chan Number of Cases: $calc(%ratsignal.botcases.active + %ratsignal.botcases.inactive) $chr(40) $+ %ratsignal.botcases.active active $chr(43) %ratsignal.botcases.inactive inactive $+ $chr(41)
    }
    else {
      ;;; Don't save to logfile if the !list is done in other than #fr or #rc
      echo -tg %ratsignal.WINDOWNAME 8 $+ Number of Cases: $calc(%ratsignal.botcases.active + %ratsignal.botcases.inactive) $chr(40) $+ %ratsignal.botcases.active active $chr(43) %ratsignal.botcases.inactive inactive $+ $chr(41)
    }
    if (%ratsignal.test.flag == $true) {
      echo -stg $ratsignal_parse_list($1-)
      if (%ratsignal.botcases != $hget(ratsignal_active, 0).item) {
        myspeak Mismatch. %ratsignal.botcases botcases, $hget(ratsignal_active, 0).item hashtable cases.
      }
      elseif (%ratsignal.botcases = 0) { myspeak the board is clear }
      else { myspeak %ratsignal.botcases botcases }
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Notifier for client IRC reconnection
on *:text:*has reconnected*:#fuelrats,#RatChat: {
  if ($nick == MechaSqueak[BOT]) {
    echo -tg %ratsignal.WINDOWNAME 8 $+ $replace($1-,has,$null,to the IRC!,$null)
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
on !*:JOIN:#fuelrats: {
  if (fuelrats.com !isin $address) {
    set %addy 9 $address
    if ($hfind(ratsignal_active,$nick,0) > 0 || $hfind(ratsignal_inactive,$nick,0) > 0) {
      ;    if ($fline(%ratsignal.WINDOWNAME,$nick,1,3) != $null) {
      if ((%ratsignal.speak.override == $true) && (%ratsignal.speak.rejoins == $true)) myspeak Client $replace($nick,$chr(95),$chr(32)) has reconnected
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Notifier for client IRC PART

on !*:PART:#fuelrats: {
  if (fuelrats.com !isin $address) {
    if ($hfind(ratsignal_active,$nick,0) > 0) {
      ;    if ($fline(%ratsignal.WINDOWNAME,$cmdr_to_irc($nick) $+ .*,1,3) != $null) {
      ;;; Comment out the following line if you already show parts in channel
      echo -t $chan 8 $nick 4 $+ PARTED $+  $address
      if ((%ratsignal.speak.override == $true) && (%ratsignal.speak.rejoins == $true)) myspeak active client $replace($nick,$chr(95),$chr(32)) has parted $chan
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Notifier for client IRC QUIT
on !*:QUIT: {
  if (fuelrats.com !isin $address) {
    if ($hfind(ratsignal_active,$nick,0) > 0) {
      ;    if ($fline(%ratsignal.WINDOWNAME,$cmdr_to_irc($nick),1,3) != $null) {
      ;;; Comment out the following line if you already show quits in channel
      echo -t #fuelrats 8 $+ $nick 4 $+ QUIT $+  $address
      if ((%ratsignal.speak.override == $true) && (%ratsignal.speak.rejoins == $true)) myspeak active client $replace($nick,$chr(95),$chr(32)) has quit
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Notifier for PC rat calls
on *:text:$($+(*,PC rat,*)):#fuelrats,#RatChat: {
  if (%ratsignal.speak.override == $true) myspeak $nick calls for pc rats
  echo -tg %ratsignal.WINDOWNAME 15 $+ $1-
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------















---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_startvars {
  set %ratsignal.list.pc $true
  set %ratsignal.list.xb $true
  set %ratsignal.list.inactive $true
  set %ratsignal.clipboard.newsys $true
  set %ratsignal.open.pw $false
  set %ratsignal.speak.override $false
  set %ratsignal.speak.pc $false
  set %ratsignal.speak.xbox $false
  set %ratsignal.speak.cred Code Red
  set %ratsignal.speak.clears $false
  set %ratsignal.speak.quits $false
  set %ratsignal.speak.rejoins $false
  set %ratsignal.test.flag $false
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_window {
  set %ratsignal.WINDOWNAME @RatsignalTEST
  set %ratsignal.SORTWINDOWNAME @RatsignalSORT
  if ($window(%ratsignal.WINDOWNAME) == $null) {
    window -Dl67Rz %ratsignal.WINDOWNAME
    log on %ratsignal.WINDOWNAME -f $logdir $+ %ratsignal.WINDOWNAME $+ .log
    if $isfile($logdir $+ %ratsignal.WINDOWNAME $+ .log) {
      loadbuf -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
    }
  }
  if ($window(%ratsignal.SORTWINDOWNAME) == $null) {
    window -hl67Rz %ratsignal.SORTWINDOWNAME
  }

  if ($window(@TEST) == $null) {
    window -ehz @TEST
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias -l ratsignal_make_htables {
  if $hget(ratsignal_active) { hfree ratsignal_active } | if $hget(ratsignal_addys) { hfree ratsignal_addys } | if $hget(ratsignal_blob) { hfree ratsignal_blob } | if $hget(ratsignal_casenum) { hfree ratsignal_casenum } | if $hget(ratsignal_cleared) { hfree ratsignal_cleared }
  if $hget(ratsignal_count) { hfree ratsignal_count } | if $hget(ratsignal_dupe) { hfree ratsignal_dupe } | if $hget(ratsignal_inactive) { hfree ratsignal_inactive } | if $hget(ratsignal_freqsys) { hfree ratsignal_freqsys } | if $hget(ratsignal_uuid) { hfree ratsignal_uuid }
  if !$hget(ratsignal_active) { hmake ratsignal_active 10 } | if !$hget(ratsignal_addys) { hmake ratsignal_addys 10000 } | if !$hget(ratsignal_blob) { hmake ratsignal_blob 10000 } | if !$hget(ratsignal_casenum) { hmake ratsignal_casenum 10 } | if !$hget(ratsignal_cleared) { hmake ratsignal_cleared 10000 }
  if !$hget(ratsignal_count) { hmake ratsignal_count 2000 } | if !$hget(ratsignal_dupe) { hmake ratsignal_dupe 10 } | if !$hget(ratsignal_inactive) { hmake ratsignal_inactive 10 } | if !$hget(ratsignal_freqsys) { hmake ratsignal_freqsys 100 } | if !$hget(ratsignal_uuid) { hmake ratsignal_uuid 1000 }

  if ($isfile(ratsignal_active.htb)) { hload ratsignal_active ratsignal_active.htb }
  else { hsave ratsignal_active ratsignal_active.htb }
  if ($isfile(ratsignal_addys.htb)) { hload ratsignal_addys ratsignal_addys.htb }
  else { hsave ratsignal_addys ratsignal_addys.htb }
  if ($isfile(ratsignal_blob.htb)) { hload ratsignal_blob ratsignal_blob.htb }
  else { hsave ratsignal_blob ratsignal_blob.htb }
  if ($isfile(ratsignal_casenum.htb)) { hload ratsignal_casenum ratsignal_casenum.htb }
  else { hsave ratsignal_casenum ratsignal_casenum.htb }
  if ($isfile(ratsignal_cleared.htb)) { hload ratsignal_cleared ratsignal_cleared.htb }
  else { hsave ratsignal_cleared ratsignal_cleared.htb }
  if ($isfile(ratsignal_count.htb)) { hload ratsignal_count ratsignal_count.htb }
  else { hsave ratsignal_count ratsignal_count.htb }
  if ($isfile(ratsignal_dupe.htb)) { hload ratsignal_dupe ratsignal_dupe.htb }
  else { hsave ratsignal_dupe ratsignal_dupe.htb }
  if ($isfile(ratsignal_inactive.htb)) { hload ratsignal_inactive ratsignal_inactive.htb }
  else { hsave ratsignal_inactive ratsignal_inactive.htb }

  ;  if ($isfile(ratsignal_freqsys.htb)) { hload ratsignal_freqsys ratsignal_freqsys.htb }
  ;  else { hsave ratsignal_freqsys ratsignal_freqsys.htb }
  ratsignal_populate_frequent_systems

  if ($isfile(ratsignal_uuid.htb)) { hload ratsignal_uuid ratsignal_uuid.htb }
  else { hsave ratsignal_uuid ratsignal_uuid.htb }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_save_htables {
  hsave ratsignal_active ratsignal_active.htb
  hsave ratsignal_addys ratsignal_addys.htb
  hsave ratsignal_blob ratsignal_blob.htb
  hsave ratsignal_casenum ratsignal_casenum.htb
  hsave ratsignal_cleared ratsignal_cleared.htb
  hsave ratsignal_count ratsignal_count.htb
  hsave ratsignal_dupe ratsignal_dupe.htb
  hsave ratsignal_inactive ratsignal_inactive.htb
  hsave ratsignal_freqsys ratsignal_freqsys.htb
  hsave ratsignal_uuid ratsignal_uuid.htb
}

alias -l ratsignal_populate_frequent_systems {
  hadd ratsignal_freqsys Aiabiko Aiabiko
  hadd ratsignal_freqsys ALRAI_SECTOR_CL-Y_D129 ALRAI SECTOR CL-Y D129
  hadd ratsignal_freqsys ALRAI_SECTOR_HW-W_B1-6 ALRAI SECTOR HW-W B1-6
  hadd ratsignal_freqsys ALRAI_SECTOR_LC-V_B2-4 ALRAI SECTOR LC-V B2-4
  hadd ratsignal_freqsys ALRAI_SECTOR_UI-T_A3-2 ALRAI SECTOR UI-T A3-2
  hadd ratsignal_freqsys ALRAI_SECTOR_ZU-P_A5-3 ALRAI SECTOR ZU-P A5-3
  hadd ratsignal_freqsys Ashima Ashima
  hadd ratsignal_freqsys BD+04_3919 BD+04 3919
  hadd ratsignal_freqsys Ephesus Ephesus
  hadd ratsignal_freqsys Eranin Eranin
  hadd ratsignal_freqsys Eravate Eravate
  hadd ratsignal_freqsys Hamir Hamir
  hadd ratsignal_freqsys Lave Lave
  hadd ratsignal_freqsys LHS_1914 LHS 1914
  hadd ratsignal_freqsys LHS_3447 LHS 3447
  hadd ratsignal_freqsys LHS_483 LHS 483
  hadd ratsignal_freqsys LP_633-12 LP 633-12
  hadd ratsignal_freqsys LTT_15449 LTT 15449
  hadd ratsignal_freqsys MCC_811 MCC 811
  hadd ratsignal_freqsys NLTT_48288 NLTT 48288
}

alias ratsignal_parse_0 {
  ;;; Attempts to break up the RATSIGNAL into components: CMDR, System, Platform, O2 Status, Language, IRC Nickname, Case #
  ;;; <%MechaSqueak[BOT]> RATSIGNAL - CMDR Mr TestCmdr - System: Sol - Platform: PC - O2: OK - Language: English (en-US) (Case #99)
  ;;; <%MechaSqueak[BOT]> RATSIGNAL - CMDR Mr TestCmdr - System: Sol - Platform: PC - O2: OK - Language: English (en-US) - IRC Nickname: Mr_TestCmdr (Case #99)
  ;  echo -t %ratsignal.WINDOWNAME $1-

  unset %ratsignal.TEMP*
  set %ratsignal.TEMP.LINE $strip($1-)
  ;$remove(%ratsignal.TEMP.LINE,RATSIGNAL - CMDR , - System, - Platform, - O2, - Language, - IRC Nickname)
  set %ratsignal.TEMP.CTIME $ctime

  ;;; Semicolons in the language token break language & time tracking in the listbox
  ;;; RATSIGNAL - CMDR cacarotto3345 - System: frey - Platform: PC - O2: OK - Language: Spanish; Castilian (es) (Case #6)
  set %ratsignal.TEMP.LINE $remove(%ratsignal.TEMP.LINE,; Castilian,$chr(38))
  if ($chr(59) isin %ratsignal.TEMP.LINE) {
    set %ratsignal.TEMP.LINE = $remove(%ratsignal.TEMP.LINE,$chr(59))
  }

  tokenize 58 %ratsignal.TEMP.LINE
  ; $1 = CMDR
  ; $2 = SYST
  ; $3 = PLAT
  ; $4 = CRED
  ; $5 = LANG
  ; $6 = NICK
  ;
  ;******************************************************************************************************************************
  set %ratsignal.TEMP.CMDR $remove($1,RATSIGNAL - CMDR , - System)
  if (%ratsignal.clipboard.newsys == $true) { clipboard $remove($2, - Platform) }
  set %ratsignal.TEMP.SYSTEM $right($remove($2, - Platform),-1)
  if ($regex(%ratsignal.TEMP.SYSTEM,^[0-9].*) > 0) { set %ratsignal.TEMP.SYSTEM $chr(32) $+ %ratsignal.TEMP.SYSTEM }
  set %ratsignal.TEMP.PLATFORM $remove($3, - O2)
  if (PC isin %ratsignal.TEMP.PLATFORM) set %ratsignal.TEMP.PLATFORM $remove($3, - O2,$chr(32))
  if (XB isin %ratsignal.TEMP.PLATFORM) set %ratsignal.TEMP.PLATFORM $remove($3, - O2,$chr(32))
  set %ratsignal.TEMP.CR $remove($4, - Language,$chr(32))
  set %ratsignal.TEMP.LANG $remove($5, - IRC Nickname)
  ;;;  set %ratsignal.TEMP.LANG $remove($5, - IRC Nickname,$chr(32))
  ;   if ($regex(%ratsignal.TEMP.LINE,Nickname: ([0-9a-zA-Z_]*)) > 0) {
  ;      set %ratsignal.TEMP.NICK $regml(1)
  ;   }
  ;   else {
  set %ratsignal.TEMP.NICK $cmdr_to_irc($right(%ratsignal.TEMP.CMDR,-1))
  ;set %ratsignal.TEMP.NICK $cmdr_to_irc(%ratsignal.TEMP.CMDR)
  set %ratsignal.TEMP.LANG $regsubex(%ratsignal.TEMP.LANG,\(Case #[0-9]+\),$null)
  set %ratsignal.TEMP.LANG $right(%ratsignal.TEMP.LANG,-1)
  ;   }

  if ($regex(%ratsignal.TEMP.LINE,(#[0-9]+)) > 0) {
    set %ratsignal.TEMP.CASE $regml(1)
    if (NOT isin %ratsignal.TEMP.CR) set %ratsignal.TEMP.CASE $regml(1)
  }

  if (($hfind(ratsignal_active,%ratsignal.TEMP.NICK,0,n) > 0) || ($hfind(ratsignal_inactive,%ratsignal.TEMP.NICK,0,n) > 0)) {
    hinc -m ratsignal_dupe %ratsignal.TEMP.NICK
    echo -t %ratsignal.WINDOWNAME Dupe $hget(ratsignal_dupe,%ratsignal.TEMP.NICK) for %ratsignal.TEMP.CMDR
    ;    echo -tg %ratsignal.WINDOWNAME Not adding duplicate signal for %ratsignal.TEMP.CMDR
    halt
  }

  hadd -m ratsignal_active %ratsignal.TEMP.NICK %ratsignal.TEMP.CMDR $+ $chr(59) $+ %ratsignal.TEMP.CASE $+ $chr(59) $+ %ratsignal.TEMP.CR $+ $chr(59) $+ %ratsignal.TEMP.PLATFORM $+ $chr(59) $+ %ratsignal.TEMP.SYSTEM $+ $chr(59) $+ %ratsignal.TEMP.LANG $+ $chr(59) $+ %ratsignal.TEMP.CTIME
  hadd -m ratsignal_casenum $strip(%ratsignal.TEMP.CASE) %ratsignal.TEMP.CMDR $+ $chr(59) $+ $ctime

  if ($hfind(ratsignal_freqsys,$replace(%ratsignal.TEMP.SYSTEM,$chr(32),$chr(95)))) { myspeak Frequent system }

  ;;;  echo -t %ratsignal.WINDOWNAME 11 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),1,59) $+  $+ $chr(7) $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),2,59) $+ $chr(7) $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),4,59) $+ $chr(7) $+ 8 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),5,59) $+  $+ $chr(7) $+ 7 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),6,59)

  if (NOT isin $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),3,59)) {
    if ( PC isin $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),4,59)) {
      echo -t %ratsignal.WINDOWNAME 11 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),1,59) $+  $+ $chr(7) $+ 4 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),2,59) $+  $+ $chr(7) $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),4,59) $+ $chr(7) $+ 8 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),5,59) $+  $+ $chr(7) $+ 7 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),6,59)
    }
    else {
      echo -t %ratsignal.WINDOWNAME 11 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),1,59) $+  $+ $chr(7) $+ 4 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),2,59) $+  $+ $chr(7) $+ 3 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),4,59) $+  $+ $chr(7) $+ 8 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),5,59) $+  $+ $chr(7) $+ 7 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),6,59)
    }
  }
  else {
    if (PC isin $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),4,59)) {
      echo -t %ratsignal.WINDOWNAME 11 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),1,59) $+  $+ $chr(7) $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),2,59) $+ $chr(7) $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),4,59) $+ $chr(7) $+ 8 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),5,59) $+  $+ $chr(7) $+ 7 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),6,59)
    }
    else {
      echo -t %ratsignal.WINDOWNAME 11 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),1,59) $+  $+ $chr(7) $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),2,59) $+ $chr(7) $+ 3 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),4,59) $+  $+ $chr(7) $+ 8 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),5,59) $+  $+ $chr(7) $+ 7 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),6,59)
    }
  }

  if ($hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,0,n) > 0) {
    echo -t #fuelrats 4Repeat: $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,1)),1,59) 10: $duration($calc($ctime - $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,1)),8,59)),2) ago, from $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,1)),5,59) $+ $chr(59) $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,1)),9,59) $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,1)),10,59)
    echo -t %ratsignal.WINDOWNAME 4Repeat $+ 10: $duration($calc($ctime - $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,1)),8,59)),2) ago. $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,1)),10,59)
    if (%ratsignal.test.flag == $true) {
      echo -t #fuelrats 8Last address: $gettok($hget(ratsignal_addys,$hfind(ratsignal_addys,%ratsignal.TEMP.NICK)),1,59)
      echo -t #fuelrats 8This address: %addy
    }
    if (%ratsignal.speak.override == $true) myspeak %ratsignal.TEMP.CMDR is a repeat client
    set -u1 %ratsignal.repeat.hash 1
  }
  else {
    if (%ratsignal.test.flag == $true) { echo -tg #fuelrats 10No record for %ratsignal.TEMP.CMDR }
    set -u1 %ratsignal.repeat.hash 0
  }

  hadd -m ratsignal_addys %ratsignal.TEMP.NICK $strip(%addy) $+ $chr(59) $+ $ctime
  unset %addy

  ;;;;;;;;;;;;; TODO: remove this junk after writing an alias to import them from the old INI into the ratsignal_cleared hashtable
  if (%ratsignal.repeat.hash == 0) {
    if $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRD) {
      var %ratsignal.oldsystem = $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,SYS0)
      echo -t #fuelrats 4INI clear of %ratsignal.TEMP.CMDR $+ $chr(58) $+ 11 $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRD) $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRT) $chr(45) GMT $+ $asctime(z) $chr(45) $duration($calc($ctime - $ctime($readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRD) $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRT))),2) ago $+ $chr(44) in 0 $+ %ratsignal.oldsystem $+ 11 $+ $chr(46) Paperwork: $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,PAPW)
      echo -t %ratsignal.WINDOWNAME 4INI clear: 11 $+ $duration($calc($ctime - $ctime($readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRD) $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRT))),2) ago.10 $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,PAPW)
      if (%ratsignal.speak.override == $true) myspeak %ratsignal.TEMP.CMDR is a repeat client
    }
    else {
      if (%ratsignal.test.flag == $true) { echo -tg #fuelrats 10No INI record for %ratsignal.TEMP.CMDR }
    }
  }
  ;;;;;;;;;;;;; TODO: remove this junk after writing an alias to import them from the old INI into the ratsignal_cleared hashtable

  ratsignal_save_htables
  loadbuf 250 -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
  ratsignal_repopulate_listbox_active1

  ;echo @TEST $ratsignal_parse_1($1-)
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_parse_1 {
  unset %ratsignal.TEMP*
  set %ratsignal.TEMP.LINE $strip($1-)
  set %ratsignal.TEMP.CTIME $ctime

  if (Nickname: isin $1-) {
    set %ratsignal.TEMP.LINE $remove(%ratsignal.TEMP.LINE,RATSIGNAL - CMDR,- System,- Platform,- O2,- Language,- IRC Nickname)
    ;;;Returns "I Like Spaces : System : PC : NOT OK : English (en-US) : I_Like_Spaces (Case #99)"
    if ($regex(%ratsignal.TEMP.LINE,(#[0-9]+)) > 0) {
      set %ratsignal.TEMP.CASE $regml(1)
    }
    set %ratsignal.TEMP.LINE $regsubex(%ratsignal.TEMP.LINE,\(Case #[0-9]+\),$null)
    tokenize 58 $instok(%ratsignal.TEMP.LINE,%ratsignal.TEMP.CASE,2,58)

    if (NOT isin $5) {
      return $1 $chr(59) $1 $chr(59) 4 $+ $2 $+  $chr(59) $3 $chr(59) $4 $chr(59) $5 $chr(59) $6 $chr(59) $ctime
    }
    else return $1 $chr(59) $7 $chr(59) $2 $chr(59) $3 $chr(59) $4 $chr(59) $5 $chr(59) $6 $chr(59) $ctime
  }
  else {
    set %ratsignal.TEMP.LINE $remove($1-,RATSIGNAL - CMDR , - System, - Platform, - O2, - Language, - IRC Nickname)
    if ($regex(%ratsignal.TEMP.LINE,(#[0-9]+)) > 0) {
      set %ratsignal.TEMP.CASE $regml(1)
    }
    set %ratsignal.TEMP.LINE $regsubex(%ratsignal.TEMP.LINE,\(Case #[0-9]+\),$null)
    tokenize 58 $instok(%ratsignal.TEMP.LINE,%ratsignal.TEMP.CASE,2,58)

    if (NOT isin $5) {
      return $1 $chr(59) $1 $chr(59) 4 $+ $2 $+  $chr(59) $3 $chr(59) $4 $chr(59) $5 $chr(59) $6 $chr(59) $ctime
    }
    else return $1 $chr(59) $1 $chr(59) $2 $chr(59) $3 $chr(59) $4 $chr(59) $5 $chr(59) $6 $chr(59) $ctime
  }
  ;;; Kashmirz ; #4 ; OK ; 11 PC  ; 8 HIP 18841  ; 7 English (en-US)  ; 1473858005
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Received R@SIGNAL from Mystifur.  Calling all available rats!  (Case 4, PC, Col 285 Sector ID-E a14-1)
;;; Received R@SIGNAL from GoRzA[PC].  Calling all available rats!  (Case 2, Crucis Sector HH-M a7-0)
;;; Received R@SIGNAL from anuclearerror.  Calling all available rats!  (Case 6, PC, NLTT 48288)
;;; Received R@SIGNAL from Coffee_Pot.  Calling all available rats!  (Case 7, PC)
;;; Received R@SIGNAL from Airey.  Calling all available rats!  (Case 4, PC)
;;; Received R@SIGNAL from CmdKnechtRuprecht.  Calling all available rats!  (Case 4, PC, Col 285 Sector JS-S c4-13)
alias ratsignal_parse_self {
  unset %ratsignal.TEMP*
  set %ratsignal.TEMP.LINE $strip($1-)
  set %ratsignal.TEMP.CTIME $ctime

  if ($regex(RSIGCMDR,$1-,/Received R@SIGNAL from (.*)\./i) > 0) {
    set %ratsignal.TEMP.CMDR $regml(RSIGCMDR,1)
    set %ratsignal.TEMP.NICK $cmdr_to_irc($regml(RSIGCMDR,1))    
  }

  if ($regex(RSIGCASE,$1-,Case ([0-9]{0,2})) > 0) {
    set %ratsignal.TEMP.CASE $chr(35) $+ $regml(RSIGCASE,1)
  }

  if %ratsignal.TEMP.CMDR == $null { return Error parsing CMDR from self signal: $1- }
  if %ratsignal.TEMP.CASE == $null { return Error parsing Case from $regml(RSIGCMDR,1) $+ 's signal: $1- }

  hadd ratsignal_active %ratsignal.TEMP.NICK %ratsignal.TEMP.CMDR $+ $chr(59) $+ %ratsignal.TEMP.CASE $+ $chr(59) $+ OK $+ $chr(59) $+ PC $+ $chr(59) $+ System $+ $chr(59) $+ English $+ $chr(59) $+ $ctime

  echo -t @TEST Self RSIG Added %ratsignal.TEMP.CMDR Case %ratsignal.TEMP.CASE

  ratsignal_repopulate_listbox_active1
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; David_Windlow's case opened with: "R@SIGNAL Puppis Sector YE-R A4-6 PC"  (Case 0, PC, Puppis Sector YE-R a4-6)
alias ratsignal_parse_manual {
  unset %ratsignal.TEMP*
  set %ratsignal.TEMP.LINE $strip($1-)
  set %ratsignal.TEMP.CTIME $ctime

  if ($regex(RSIGCMDR,$1-,(.*)'s.*) > 0) {
    set %ratsignal.TEMP.CMDR $regml(RSIGCMDR,1)
    set %ratsignal.TEMP.NICK $cmdr_to_irc($regml(RSIGCMDR,1))    
  }

  if ($regex(RSIGCASE,$1-,Case ([0-9]{0,2})) > 0) {
    set %ratsignal.TEMP.CASE $chr(35) $+ $regml(RSIGCASE,1)
  }

  if %ratsignal.TEMP.CMDR == $null { return Error parsing CMDR from manual signal: $1- }
  if %ratsignal.TEMP.CASE == $null { return Error parsing Case from manual signal: $1- }

  hadd ratsignal_active %ratsignal.TEMP.NICK %ratsignal.TEMP.CMDR $+ $chr(59) $+ %ratsignal.TEMP.CASE $+ $chr(59) $+ OK $+ $chr(59) $+ PC $+ $chr(59) $+ System $+ $chr(59) $+ English $+ $chr(59) $+ $ctime

  echo -t @TEST Manual RSIG Added %ratsignal.TEMP.CMDR Case %ratsignal.TEMP.CASE

  ratsignal_repopulate_listbox_active1
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_clear_0 {
  unset %ratsignal.CLEARED*
  if ($regex($1-,/Case (.*) cleared/i) > 0) {
    set %ratsignal.CLEARED $strip($regml(1))
    set %ratsignal.CLEARED_NICK $cmdr_to_irc(%ratsignal.CLEARED)

    if ($regex($1-,/cleared! (.*) do/i) > 0) {
      set %ratsignal.CLEARED_RAT $left($regml(1),$calc($len($regml(1)) - 1))
    }
    if ($regex($1-,/Paperwork: (.*)/i) > 0) {
      set %ratsignal.CLEARED_PW $regml(1)
    }
  }

  ;;; Halt on known tests
  if ((%ratsignal.CLEARED == MarenTest) || (%ratsignal.CLEARED == testcaseplsignore)) halt

  ;;; If the rat parameter is not used on !clear, assign as Dispatch in logs
  if (%ratsignal.CLEARED_RAT == $null) { set %ratsignal.CLEARED_RAT Dispatch }

  if (%ratsignal.CLEARED_PW == $null) { set %ratsignal.CLEARED_PW http://foo.foo }

  if ($hget(ratsignal_dupe,%ratsignal.CLEARED_NICK) > 0) {
    hdec ratsignal_dupe %ratsignal.CLEARED_NICK
    echo -t %ratsignal.WINDOWNAME Dupes %ratsignal.CLEARED_NICK $+ : $hget(ratsignal_dupe,%ratsignal.CLEARED_NICK)
    halt
  }
  elseif ($hget(ratsignal_dupe,%ratsignal.CLEARED_NICK) = 0) {
    ;hdel ratsignal_dupe %ratsignal.CLEARED_NICK
  }

  ;;; Look in the inactive table if a cleared case name isn't found.
  ;  if ($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.CLEARED_NICK,1)) == $null) {
  ;    if ($hget(ratsignal_inactive,$hfind(ratsignal_inactive,%ratsignal.CLEARED_NICK,1)) != $null) {
  ;      ratsignal_move_active %ratsignal.CLEARED_NICK ratsignal_inactive
  ;    }
  ;  }


  ;;; Create an entry in the active table if a cleared case name isn't found, fill with dummy data so the number of tokens matches when moved to the cleared table
  if ($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.CLEARED_NICK,1)) == $null) {
    hadd -m ratsignal_active %ratsignal.CLEARED_NICK UNTRACKED $+ $chr(59) $+ CASE $+ $chr(59) $+ O2 $+ $chr(59) $+ PLATFORM $+ $chr(59) $+ SYSTEM $chr(59) $+ LANGUAGE $+ $chr(59) $+ 1418688000
    var %ratsignal_dummy 1
  }
  else { var %ratsignal_dummy 0 }

  ;;; Write into the cleared table only if it's not dummy origin info, otherwise only if there's not already a clear record
  if (%ratsignal_dummy == 0) {
    hadd -m ratsignal_cleared %ratsignal.CLEARED_NICK $hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.CLEARED_NICK,1)) $+ $chr(59) $+ $ctime $+ $chr(59) $+ %ratsignal.CLEARED_RAT $+ $chr(59) $+ %ratsignal.CLEARED_PW
  }
  elseif (%ratsignal_dummy == 1) {
    if ($hget(ratsignal_cleared,%ratsignal.CLEARED_NICK) == $null) {
      hadd -m ratsignal_cleared %ratsignal.CLEARED_NICK $hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.CLEARED_NICK,1)) $+ $chr(59) $+ $ctime $+ $chr(59) $+ %ratsignal.CLEARED_RAT $+ $chr(59) $+ %ratsignal.CLEARED_PW
    }
    else echo -t @TEST Not adding dummy info $hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.CLEARED_NICK,1)) $+ $chr(59) $+ $ctime $+ $chr(59) $+ %ratsignal.CLEARED_RAT $+ $chr(59) $+ %ratsignal.CLEARED_PW for %ratsignal.CLEARED_NICK
  }

  ;;; Log to the Ratsignal window: Cleared CMDR • Case Duration • 1st Limpet • Paperwork
  ;;;  echo -t %ratsignal.WINDOWNAME 9 $+ %ratsignal.CLEARED • $duration($calc($ctime - $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.CLEARED_NICK,1)),7,59)),3) 10• %ratsignal.CLEARED_RAT • %ratsignal.CLEARED_PW
  echo -t %ratsignal.WINDOWNAME 9 $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.CLEARED_NICK,1)),1,59) • $duration($calc($ctime - $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.CLEARED_NICK,1)),7,59)),3) 10• %ratsignal.CLEARED_RAT • %ratsignal.CLEARED_PW

  ;;; Remove from the active hash table, and inactive table if present
  hdel ratsignal_active %ratsignal.CLEARED_NICK $hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.CLEARED_NICK,1))
  if $hget(ratsignal_inactive,%ratsignal.CLEARED_NICK) {
    hdel ratsignal_inactive %ratsignal.CLEARED_NICK
    echo -t @TEST Cleared inactive case %ratsignal.CLEARED_NICK
  }

  ratsignal_save_htables
  if ($calc($hget(ratsignal_cleared, 0).item / 50) == $round($calc($hget(ratsignal_cleared, 0).item / 50),0)) { myspeak $hget(ratsignal_cleared, 0).item cleared cases }

  if ((%ratsignal.CLEARED_RAT isin $me) && (%ratsignal.open.pw == $true)) {
    run -p %ratsignal.CLEARED_PW
  }

  if ((%ratsignal.speak.clears == $true) && (%ratsignal.speak.override == $true)) {
    myspeak Cleared ; %ratsignal.CLEARED
  }

  loadbuf 250 -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log

  ratsignal_repopulate_listbox_active1
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------























---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_parse_list {
  ;;; 1 active case: [6]Donoka Ronthier PC; 4 inactive cases: [2]Boomer(CR) PC, [7]ravenmadcat PC, [8]ImpactedDust634 XB, [9]OddJob60 XB
  ;;; %ratsignal.last.list
  ;;; takes $1-
  var %foo $regsubex($1-, (([0-9]|No) (inactive|active) (cases:|case:|cases|case)), $null)
  var %foo $regsubex(%foo, (([0-9]|No) (inactive|active) (cases:|case:|cases|case)), $null)
  ;return $remove(%foo, PC, XB,(CR))
  return %foo
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;on 9:text:!lastclear*:#RatChat,?: {
;  query $nick $ratsignal_search0($2-)
;}
alias ratsignal_search0 {
  if ($0 < 2) return Search previous cleared cases. Usage: !lastclear <CMDR Name>
  if ($hfind(ratsignal_cleared,$cmdr_to_irc($2),1,w) != $null) {
    tokenize 59 $hget(ratsignal_cleared,$hfind(ratsignal_cleared,$cmdr_to_irc($2),1,w))
    return $1 was last cleared from $strip($5) $duration($calc($ctime - $8),2) ago, by $9 $10
  }
  else return No record of $2-
}
alias ratsignal_search1 {
  if ($0 < 1) return Search previous cleared cases. Usage: $ratsignal_search1(<CMDR Name>)
  if $hfind(ratsignal_cleared,$cmdr_to_irc($1-),1,w) {
    tokenize 59 $hget(ratsignal_cleared,$hfind(ratsignal_cleared,$cmdr_to_irc($1-),1,w))
    return $1 was last cleared from $strip($5) $duration($calc($ctime - $8),2) ago, by $9 $10
  }
  else return No record of $1-
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias cmdr2irc {
  var %reg = /([ _\[\]\{\}\.\|`0-9a-zA-Z]{3,32})/i
  if $regex($1-,%reg) {
    return $cmdr_to_irc($regml(1))
  }
}
alias cmdr_to_irc {
  return $replace($1-,$chr(32),$chr(95),$chr(124),$chr(177))
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_clone_line {
  if ($0 < 4) echo -stg Usage: /ratsignal_clone_line <SOURCEWINDOW> <LINE> <TARGETWINDOW> <LINE>
  rline -l $$3 $$4 $line($$1,$$2,1)
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_fix_line {
  if ($0 != 4) {
    echo -stg Usage: /ratsignal_fix_line <SOURCEWINDOW> <LINE> <matchtext> <replacetext>
    echo -stg <matchtext> and <replacetext> must not contain spaces
  }
  rline -l $$1 $$2 $replace($line($$1,$$2,1),$3,$4)
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias replace_multiple_spaces {
  return $regsubex($1-,\([ ]{2,}\),$chr(32))
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias fix_spaces {
  if ($left($1-,1) == $chr(32)) return Leading space
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_rename {
  if ($0 < 3) {
    echo -stg Rename existing client record on the specified table. Usage: ratsignal_rename <OLDNICK> <NEWNICK> <TABLE>
    return
  }
  if ($hget($3,$hfind($3,$1,1)) != $null) {
    hadd -m $3 $2 $hget($3,$hfind($3,$1,1))
    ;  dline -l %ratsignal.WINDOWNAME $fline(%ratsignal.WINDOWNAME,/.* $+ $1 $+ .*/i,1,3)
    ;  rline -l %ratsignal.WINDOWNAME $fline(%ratsignal.WINDOWNAME,/.* $+ $1 $+ .*/i,1,3) $replace($line(%ratsignal.WINDOWNAME,$fline(%ratsignal.WINDOWNAME,/.* $+ $1 $+ .*/i,1,3),1),$1,$2)
    hdel $3 $1 $hget($3,$hfind($3,$1,1))
  }
  else echo -stg $1 not found in $3
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_copy_active {
  if ($0 == 0) {
    echo -sg Usage: ratsignal_copy_active IRCNICK fromtable
    return
  }
  if ($hget($2) != $2) { echo -stg Invalid hash table: $2 | return }
  if $hget($2,$hfind($2,$1,1)) {
    hadd -m ratsignal_active $1 $hget($2,$hfind($2,$1,1))
  }
  else echo -stg $1 not found in $2
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_copy_inactive {
  if ($0 == 0) {
    echo -sg Usage: ratsignal_copy_inactive IRCNICK fromtable
    return
  }
  if ($hget($2) != $2) { echo -stg Invalid hash table: $2 | return }
  if $hget($2,$hfind($2,$1,1)) {
    hadd -m ratsignal_inactive $1 $hget($2,$hfind($2,$1,1))
  }
  else echo -stg $1 not found in $2
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_move_active {
  if ($0 == 0) {
    echo -sg Usage: ratsignal_move_active IRCNICK fromtable
    return
  }
  if ($hget($2) != $2) { echo -stg Invalid hash table: $2 | return }
  if $hget($2,$hfind($2,$1,1)) {
    hadd -m ratsignal_active $1 $hget($2,$hfind($2,$1,1))
    hdel $2 $1 $hget($2,$hfind($2,$1,1))
  }
  else echo -stg $1 not found in $2
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_move_inactive {
  if ($0 == 0) {
    echo -sg Usage: ratsignal_move_inactive IRCNICK fromtable
    return
  }
  if ($hget($2) != $2) { echo -stg Invalid hash table: $2 | return }
  if $hget($2,$hfind($2,$1,1)) {
    hadd -m ratsignal_inactive $1 $hget($2,$hfind($2,$1,1))
    hdel $2 $1 $hget($2,$hfind($2,$1,1))
  }
  else echo -stg $1 not found in $2
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_move_cleared {
  if ($0 == 0) {
    echo -sg Usage: ratsignal_move_cleared IRCNICK fromtable
    return
  }
  if ($hget($2) != $2) { echo -stg Invalid hash table: $2 | return }
  if $hget($2,$hfind($2,$1,1)) {
    hadd -m ratsignal_cleared $1 $hget($2,$hfind($2,$1,1))
    hdel $2 $1 $hget($2,$hfind($2,$1,1))
  }
  else echo -stg $1 not found in $2
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_hash_to_listbox_insert {
  set %ratsignal.TEMP.NICK $1
  iline -nl %ratsignal.WINDOWNAME $2 $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),1,59) $chr(124) $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),2,59) $chr(124) $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),4,59) $chr(124) $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),5,59) $chr(124) $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),6,59) $chr(124) $&
    $asctime($gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),7,59),HH:nn:ss mmm dd)
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_hash_to_listbox_replace {
  set %ratsignal.TEMP.NICK $1
  rline -l %ratsignal.WINDOWNAME $2 $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),1,59) $chr(124) $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),2,59) $chr(124) $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),4,59) $chr(124) $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),5,59) $chr(124) $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),6,59) $chr(124) $&
    $asctime($gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),7,59),HH:nn:ss mmm dd)
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_repopulate_listbox_active {
  clear -l %ratsignal.WINDOWNAME
  var %i = 1
  ;iterate
  while ($hget(ratsignal_active, %i).item) {
    ;do stuff
    ratsignal_hash_to_listbox_insert $v1 %i
    inc %i
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_repopulate_listbox_active1 {
  ratsignal_window
  clear -l %ratsignal.WINDOWNAME
  clear -l %ratsignal.SORTWINDOWNAME
  clear %ratsignal.SORTWINDOWNAME
  if $hfind(ratsignal_active,.*,0,r,ratsignal_repopulate_listbox_add_line $1 ratsignal_active) {
    ;    filter -azclL %ratsignal.WINDOWNAME %ratsignal.SORTWINDOWNAME ratsignal_filter_sort
    filter -azclL %ratsignal.SORTWINDOWNAME %ratsignal.WINDOWNAME ratsignal_filter_sort
  }

  ;clear -l %ratsignal.SORTWINDOWNAME
  ;clear %ratsignal.SORTWINDOWNAME

}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_repopulate_listbox_inactive1 {
  ratsignal_window
  clear -l %ratsignal.WINDOWNAME
  clear -l %ratsignal.SORTWINDOWNAME
  clear %ratsignal.SORTWINDOWNAME
  if $hfind(ratsignal_inactive,.*,0,r,ratsignal_repopulate_listbox_add_line $1 ratsignal_inactive) {
    ;    filter -azclL %ratsignal.WINDOWNAME %ratsignal.SORTWINDOWNAME ratsignal_filter_sort
    filter -azclL %ratsignal.SORTWINDOWNAME %ratsignal.WINDOWNAME ratsignal_filter_sort
  }

  ;clear -l %ratsignal.SORTWINDOWNAME
  ;clear %ratsignal.SORTWINDOWNAME

}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_repopulate_listbox_cleared1 {
  ratsignal_window
  clear -l %ratsignal.WINDOWNAME
  clear -l %ratsignal.SORTWINDOWNAME
  clear %ratsignal.SORTWINDOWNAME
  if $hfind(ratsignal_cleared,.*,0,r,ratsignal_repopulate_listbox_add_cleared_line $1 ratsignal_cleared) {
    ;    filter -azclL %ratsignal.WINDOWNAME %ratsignal.SORTWINDOWNAME ratsignal_filter_sort_cleared
    filter -azclL %ratsignal.SORTWINDOWNAME %ratsignal.WINDOWNAME ratsignal_filter_sort_cleared
  }

  ;clear -l %ratsignal.SORTWINDOWNAME
  ;clear %ratsignal.SORTWINDOWNAME

}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_repopulate_listbox_add_line {
  if (%ratsignal.list.inactive == $false) {
    if ($2 == ratsignal_active) { if $hget(ratsignal_inactive,$1) { return } }
  }
  elseif $hget(ratsignal_inactive,$1) {
    var %inactive = 1
  }
  tokenize 59 $hget($2,$1)
  if (NOT isin $3) {
    if (PC isin $4) {
      if %inactive {
        if (%ratsignal.list.pc == $true) { iline -l %ratsignal.SORTWINDOWNAME 1 14 $+ $1 $+  $chr(124) 4 $+ $2 $+  $chr(124)  $+ $4 $+  $chr(124) 8 $+ $5 $+  $chr(124) 7 $+ $6 $+  $chr(124) 15 $+ $ctime_to_asctime($7) }
      }
      elseif (%ratsignal.list.pc == $true) { iline -l %ratsignal.SORTWINDOWNAME 1 11 $+ $1 $+  $chr(124) 4 $+ $2 $+  $chr(124)  $+ $4 $+  $chr(124) 8 $+ $5 $+  $chr(124) 7 $+ $6 $+  $chr(124) 15 $+ $ctime_to_asctime($7) }
    }
    elseif (XB isin $4) {
      if %inactive {
        if (%ratsignal.list.xb == $true) { iline -l %ratsignal.SORTWINDOWNAME 1 14 $+ $1 $+  $chr(124) 4 $+ $2 $+  $chr(124) 3 $+ $4 $+  $chr(124) 8 $+ $5 $+  $chr(124) 7 $+ $6 $+  $chr(124) 15 $+ $ctime_to_asctime($7) }
      }
      elseif (%ratsignal.list.xb == $true) { iline -l %ratsignal.SORTWINDOWNAME 1 11 $+ $1 $+  $chr(124) 4 $+ $2 $+  $chr(124) 3 $+ $4 $+  $chr(124) 8 $+ $5 $+  $chr(124) 7 $+ $6 $+  $chr(124) 15 $+ $ctime_to_asctime($7) }
    }
  }
  else {
    if (PC isin $4) {
      if %inactive {
        if (%ratsignal.list.pc == $true) { iline -l %ratsignal.SORTWINDOWNAME 1 14 $+ $1 $+  $chr(124) $2 $chr(124)  $+ $4 $+  $chr(124) 8 $+ $5 $+  $chr(124) 7 $+ $6 $+  $chr(124) 15 $+ $ctime_to_asctime($7) }
      }
      elseif (%ratsignal.list.pc == $true) { iline -l %ratsignal.SORTWINDOWNAME 1 11 $+ $1 $+  $chr(124) $2 $chr(124)  $+ $4 $+  $chr(124) 8 $+ $5 $+  $chr(124) 7 $+ $6 $+  $chr(124) 15 $+ $ctime_to_asctime($7) }
    }
    elseif (XB isin $4) {
      if %inactive {
        if (%ratsignal.list.xb == $true) { iline -l %ratsignal.SORTWINDOWNAME 1 14 $+ $1 $+  $chr(124) $2 $chr(124) 3 $+ $4 $+  $chr(124) 8 $+ $5 $+  $chr(124) 7 $+ $6 $+  $chr(124) 15 $+ $ctime_to_asctime($7) }
      }
      elseif (%ratsignal.list.xb == $true) { iline -l %ratsignal.SORTWINDOWNAME 1 11 $+ $1 $+  $chr(124) $2 $chr(124) 3 $+ $4 $+  $chr(124) 8 $+ $5 $+  $chr(124) 7 $+ $6 $+  $chr(124) 15 $+ $ctime_to_asctime($7) }
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_repopulate_listbox_add_cleared_line {
  tokenize 59 $hget($2,$1)
  if (PC isin $4) { iline -l %ratsignal.SORTWINDOWNAME 1 11 $+ $1 $+  $chr(124)  $+ $4 $+  $chr(124) 15 $+ $ctime_to_asctime($7) $chr(124) $ctime_to_asctime($8) $chr(124) 10 $+ $9 $+  $chr(124) 10 $+ $10 }
  elseif (XB isin $4) { iline -l %ratsignal.SORTWINDOWNAME 1 11 $+ $1 $+  $chr(124) 3 $+ $4 $+  $chr(124) 15 $+ $ctime_to_asctime($7) $chr(124) $ctime_to_asctime($8) $chr(124) 10 $+ $9 $+  $chr(124) 10 $+ $10 }
  else { iline -l %ratsignal.SORTWINDOWNAME 1 11 $+ $1 $+  $chr(124) $4 $chr(124) 15 $+ $ctime_to_asctime($7) $chr(124) $ctime_to_asctime($8) $chr(124) 10 $+ $9 $+  $chr(124) 10 $+ $10 }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_filter_sort {
  var %first $1
  var %second $2
  tokenize 124 %first
  var %first $strip($1)
  tokenize 124 %second
  var %second $strip($1)
  echo -t %ratsignal.SORTWINDOWNAME $gettok($hget(ratsignal_active,$cmdr_to_irc(%first)),7,59) $chr(124) $gettok($hget(ratsignal_active,$cmdr_to_irc(%second)),7,59)
  if ($gettok($hget(ratsignal_active,$cmdr_to_irc(%first)),7,59) > $gettok($hget(ratsignal_active,$cmdr_to_irc(%second)),7,59)) {
    echo -t %ratsignal.SORTWINDOWNAME -1
    return -1
  }
  if ($gettok($hget(ratsignal_active,$cmdr_to_irc(%first)),7,59) < $gettok($hget(ratsignal_active,$cmdr_to_irc(%second)),7,59)) {
    echo -t %ratsignal.SORTWINDOWNAME 1
    return 1
  }
  else {
    echo -t %ratsignal.SORTWINDOWNAME 0
    return 0
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_filter_sort_cleared {
  var %first $1
  var %second $2
  tokenize 124 %first
  var %first $strip($1)
  tokenize 124 %second
  var %second $strip($1)
  ;echo -t %ratsignal.SORTWINDOWNAME $gettok($hget(ratsignal_cleared,$cmdr_to_irc(%first)),8,59) $chr(124) $gettok($hget(ratsignal_cleared,$cmdr_to_irc(%second)),8,59)
  if ($gettok($hget(ratsignal_cleared,$cmdr_to_irc(%first)),8,59) > $gettok($hget(ratsignal_cleared,$cmdr_to_irc(%second)),8,59)) {
    ;echo -t %ratsignal.SORTWINDOWNAME -1
    return -1
  }
  if ($gettok($hget(ratsignal_cleared,$cmdr_to_irc(%first)),8,59) < $gettok($hget(ratsignal_cleared,$cmdr_to_irc(%second)),8,59)) {
    ;echo -t %ratsignal.SORTWINDOWNAME 1
    return 1
  }
  else {
    ;echo -t %ratsignal.SORTWINDOWNAME 0
    return 0
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_repopulate_listbox_inactive {
  clear -l %ratsignal.WINDOWNAME
  var %i = 1
  ;iterate
  while ($hget(ratsignal_inactive, %i).item) {
    ;do stuff
    ratsignal_hash_to_listbox_insert $v1 %i
    inc %i
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_list_tables {
  var %i = 1
  while ($hget(ratsignal_active, %i).item) {
    echo 0 -stg %i $ctime_to_asctime($replace($hget(ratsignal_active, $v1),$chr(59),$chr(124)))
    inc %i
  }
  echo 0 -stg -
  if ($1 == -a) halt

  var %i = 1
  while ($hget(ratsignal_inactive, %i).item) {
    echo 14 -stg %i $ctime_to_asctime($replace($hget(ratsignal_inactive, $v1),$chr(59),$chr(124)))
    inc %i
  }
  echo 14 -stg -
  if ($1 == -i) halt

  ;  var %i = 1
  ;  while ($hget(ratsignal_cleared, %i).item) {
  ;    echo 15 -stg %i $ctime_to_asctime($ctime_to_asctime($replace($hget(ratsignal_cleared, $v1),$chr(59),$chr(124))))
  ;    inc %i
  ;  }
  ;  echo 15 -stg -
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias -l ratsignal_clean_cleared {
  ;  if $hget(ratsignal_cleared2) {
  ;    hfree ratsignal_cleared2
  ;    hmake ratsignal_cleared2 10000
  ;  }
  ;  else { hmake ratsignal_cleared2 10000 }

  var %i = 1
  while ($hget(ratsignal_cleared, %i).item) {
    hadd ratsignal_cleared $hget(ratsignal_cleared, %i).item $replace($hget(ratsignal_cleared, %i).data,$chr(32) $+ $chr(59),$chr(59),$chr(59) $+ $chr(32),$chr(59),$chr(32) $+ $chr(59) $+ $chr(32),$chr(59))
    inc %i
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_count_timer {
  timerratsignal_count_delay -o $asctime(hh) $+ $chr(58) $+ $calc($asctime(nn) + 1)) 1 1 timerratsignal_count 0 60 ratsignal_count
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_count {
  hadd ratsignal_count _h01 0
  hadd ratsignal_count _h24 0
  hadd ratsignal_count _d07 0
  hadd ratsignal_count _d30 0
  if !$hget(ratsignal_count,_h01.max) { hadd ratsignal_count _h01.max 0 $+ $chr(59) $+ $ctime }
  if !$hget(ratsignal_count,_h24.max) { hadd ratsignal_count _h24.max 0 $+ $chr(59) $+ $ctime }
  if !$hget(ratsignal_count,_d07.max) { hadd ratsignal_count _d07.max 0 $+ $chr(59) $+ $ctime }
  if !$hget(ratsignal_count,_d30.max) { hadd ratsignal_count _d30.max 0 $+ $chr(59) $+ $ctime }

  var %i = 1
  while ($hget(ratsignal_cleared, %i).item) {
    var %cleartime = $gettok($hget(ratsignal_cleared, %i).data,7,59)
    if ($calc($ctime - %cleartime) < 3600) { hinc ratsignal_count _h01 }
    /*    if ($calc($ctime - %cleartime) < $calc(3600 * 2)) { hinc ratsignal_count _h02 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 3)) { hinc ratsignal_count _h03 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 4)) { hinc ratsignal_count _h04 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 5)) { hinc ratsignal_count _h05 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 6)) { hinc ratsignal_count _h06 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 7)) { hinc ratsignal_count _h07 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 8)) { hinc ratsignal_count _h08 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 9)) { hinc ratsignal_count _h09 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 10)) { hinc ratsignal_count _h10 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 11)) { hinc ratsignal_count _h11 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 12)) { hinc ratsignal_count _h12 }
    */
    if ($calc($ctime - %cleartime) < 86400) { hinc ratsignal_count _h24 }
    if ($calc($ctime - %cleartime) < $calc(86400 * 7)) { hinc ratsignal_count _d07 }
    if ($calc($ctime - %cleartime) < $calc(86400 * 30)) { hinc ratsignal_count _d30 }
    inc %i
  }

  var %i = 1
  while ($hget(ratsignal_active, %i).item) {
    var %cleartime = $gettok($hget(ratsignal_active, %i).data,7,59)
    if ($calc($ctime - %cleartime) < 3600) { hinc ratsignal_count _h01 }
    /*    if ($calc($ctime - %cleartime) < $calc(3600 * 2)) { hinc ratsignal_count _h02 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 3)) { hinc ratsignal_count _h03 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 4)) { hinc ratsignal_count _h04 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 5)) { hinc ratsignal_count _h05 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 6)) { hinc ratsignal_count _h06 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 7)) { hinc ratsignal_count _h07 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 8)) { hinc ratsignal_count _h08 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 9)) { hinc ratsignal_count _h09 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 10)) { hinc ratsignal_count _h10 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 11)) { hinc ratsignal_count _h11 }
    if ($calc($ctime - %cleartime) < $calc(3600 * 12)) { hinc ratsignal_count _h12 }
    */
    if ($calc($ctime - %cleartime) < 86400) { hinc ratsignal_count _h24 }
    if ($calc($ctime - %cleartime) < $calc(86400 * 7)) { hinc ratsignal_count _d07 }
    if ($calc($ctime - %cleartime) < $calc(86400 * 30)) { hinc ratsignal_count _d30 }
    inc %i
  }

  if ($gettok($hget(ratsignal_count,_h01.max),1,59) < $hget(ratsignal_count,_h01)) { hadd ratsignal_count _h01.max $hget(ratsignal_count,_h01) $+ $chr(59) $+ $ctime }
  if ($gettok($hget(ratsignal_count,_h24.max),1,59) < $hget(ratsignal_count,_h24)) { hadd ratsignal_count _h24.max $hget(ratsignal_count,_h24) $+ $chr(59) $+ $ctime }
  if ($gettok($hget(ratsignal_count,_d07.max),1,59) < $hget(ratsignal_count,_d07)) { hadd ratsignal_count _d07.max $hget(ratsignal_count,_d07) $+ $chr(59) $+ $ctime }
  if ($gettok($hget(ratsignal_count,_d30.max),1,59) < $hget(ratsignal_count,_d30)) { hadd ratsignal_count _d30.max $hget(ratsignal_count,_d30) $+ $chr(59) $+ $ctime }

  hsave ratsignal_count ratsignal_count.htb
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignalTEST_log_reload {
  loadbuf 250 -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Text to speech called on RATSIGNAL noting platform and o2 status
alias ratsignal_speak {
  if (%ratsignal.speak.override == $true) {
    ;--------------------------------------------
    if (Platform: PC isin $strip($1-)) {
      if (%ratsignal.speak.pc == $true) myspeak Rat signal
    }
    if (Platform: XB isin $strip($1-)) {
      if (%ratsignal.speak.xbox == $true) myspeak Rat signal Xbox
    }
    if (O2: NOT isin $strip($1-)) {
      myspeak %ratsignal.speak.cred
    }
    ;--------------------------------------------
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Sets mIRC's wave volume to %speakvolume before TTS events are fired. Set manually or through the %ratsignal.WINDOWNAME menu
alias myspeak {
  if ($away == $false) {
    if (%ratsignal.speak.override == $true) {
      vol -w %speakvolume
      speak $1-
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_quiet {
  if ($gettok($hget(ratsignal_count,_quiet.max),1,59) < $calc($ctime - %ratsignal.TEMP.CTIME)) { hadd ratsignal_count _quiet.max $calc($ctime - %ratsignal.TEMP.CTIME) $+ $chr(59) $+ $ctime }
  hsave ratsignal_count ratsignal_count.htb
}

alias ratsignal_quiet_timer {
  timerRatsig_quiet -o 0 1 if ($gettok($hget(ratsignal_count,_quiet.max),1,59) < $calc($ctime - %ratsignal.TEMP.CTIME)) { hadd ratsignal_count _quiet.max $calc($ctime - %ratsignal.TEMP.CTIME) $chr(59) $ctime }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_toggle_system2clip {
  if (%ratsignal.clipboard.newsys == $true) { set %ratsignal.clipboard.newsys $false }
  else { set %ratsignal.clipboard.newsys $true }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_toggle_open_pw {
  if (%ratsignal.open.pw == $true) { set %ratsignal.open.pw $false }
  else { set %ratsignal.open.pw $true }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_toggle_list_pc {
  if (%ratsignal.list.pc == $true) { set %ratsignal.list.pc $false }
  else { set %ratsignal.list.pc $true }
  ratsignal_repopulate_listbox_active1
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_toggle_list_xb {
  if (%ratsignal.list.xb == $true) { set %ratsignal.list.xb $false }
  else { set %ratsignal.list.xb $true }
  ratsignal_repopulate_listbox_active1
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_toggle_list_inactive {
  if (%ratsignal.list.inactive == $true) { set %ratsignal.list.inactive $false }
  else { set %ratsignal.list.inactive $true }
  ratsignal_repopulate_listbox_active1
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_toggle_speak_override {
  if (%ratsignal.speak.override == $true) { set %ratsignal.speak.override $false }
  else { set %ratsignal.speak.override $true }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_toggle_speak_pc {
  if (%ratsignal.speak.pc == $true) { set %ratsignal.speak.pc $false }
  else { set %ratsignal.speak.pc $true }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_toggle_speak_xbox {
  if (%ratsignal.speak.xbox == $true) { set %ratsignal.speak.xbox $false }
  else { set %ratsignal.speak.xbox $true }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_toggle_speak_clears {
  if (%ratsignal.speak.clears == $true) { set %ratsignal.speak.clears $false }
  else { set %ratsignal.speak.clears $true }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_toggle_speak_quits {
  if (%ratsignal.speak.quits == $true) { set %ratsignal.speak.quits $false }
  else { set %ratsignal.speak.quits $true }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_toggle_speak_rejoins {
  if (%ratsignal.speak.rejoins == $true) { set %ratsignal.speak.rejoins $false }
  else { set %ratsignal.speak.rejoins $true }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;;;;;;;;;;;; TODO: Write this alias. Get rid of the old INI file.
alias ratsignal_import_ini {
  ;hadd -m ratsignal_import
}
;;;;;;;;;;;;; TODO: Write this alias. Get rid of the old INI file.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

















---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
on *:DIALOG:ratsignal_hashtables:init:0: {
  ratsignal_hashtable_dialog_populate
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ON *:DIALOG:ratsignal_hashtables:uclick:*: {
  ratsignal_hashtable_dialog_populate
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ON *:DIALOG:ratsignal_hashtables:rclick:*: {
  ratsignal_hashtable_dialog_populate
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_hashtable_dialog_populate {
  did -r ratsignal_hashtables 5
  did -r ratsignal_hashtables 6
  did -r ratsignal_hashtables 7
  did -r ratsignal_hashtables 8
  did -r ratsignal_hashtables 10

  var %i = 1
  while ($hget(ratsignal_active, %i).item) {
    did -a ratsignal_hashtables 5 $strip($ctime_to_asctime($replace($hget(ratsignal_active, $v1),$chr(59),$chr(124))))
    inc %i
  }
  var %i = 1
  while ($hget(ratsignal_casenum, %i).item) {
    did -a ratsignal_hashtables 8 $hget(ratsignal_casenum, %i).item $ctime_to_asctime($hget(ratsignal_casenum, $v1))
    inc %i
  }
  var %i = 1
  while ($hget(ratsignal_inactive, %i).item) {
    did -a ratsignal_hashtables 6 $strip($ctime_to_asctime($replace($hget(ratsignal_inactive, $v1),$chr(59),$chr(124))))
    inc %i
  }
  var %i = 1
  while ($hget(ratsignal_cleared, %i).item) {
    did -a ratsignal_hashtables 7 $strip($ctime_to_asctime($ctime_to_asctime($replace($hget(ratsignal_cleared, $v1),$chr(59),$chr(124)))))
    inc %i
  }
  var %i = 1
  while ($hget(ratsignal_uuid, %i).item) {
    did -a ratsignal_hashtables 10 $hget(ratsignal_uuid, %i).item $hget(ratsignal_uuid, $v1)
    inc %i
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
dialog ratsignal_hashtables {
  title "Ratsignal!"
  size -1 -1 763 590
  text "Cleared Log (ratsignal_cleared)", 3, 4 539 185 17
  text "Active (ratsignal_active)", 9, 4 5 150 17
  text "Inactive (ratsignal_inactive)", 1, 4 191 150 17
  text "Last client to use case # (ratsignal_casenum)", 2, 4 375 234 17
  list 5, 15 22 735 179, vsbar
  list 6, 15 208 737 179, vsbar
  combo 7, 16 557 740 22, drop sort
  list 8, 14 392 273 150, vsbar sort
  text "Captured UUIDs (ratsignal_uuid)", 4, 290 375 169 17
  list 10, 290 392 461 160, vsbar sort
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*
; Nick   CMDR;Case;O2;Platform;System;Language;ctime
; 1 = CMDR
; 2 = Case
; 3 = O2
; 4 = Platform
; 5 = System
; 6 = Language
; 7 = ctime opened
; 8 = ctime closed
; 9 = 1st limpet
; 10 = Paperwork
; $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),1,59)
; $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),2,59)
; $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),3,59)
; $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),4,59)
; $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),5,59)
; $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),6,59)
; $asctime($gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),7,59),HH:nn:ss mmm dd)
*/
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




















menu @RatsignalTEST {
  $iif($hget(ratsignal_inactive,$cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1))),Activate $+ $chr(58) $left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)): {
    hdel ratsignal_inactive $cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1))
    ratsignal_repopulate_listbox_active1
  }
  $iif(($sline(%ratsignal.WINDOWNAME,1) != $null) && (!$hget(ratsignal_inactive,$cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)))),Deactivate $+ $chr(58) $left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)): {
    ratsignal_copy_inactive $cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)) ratsignal_active
    ratsignal_repopulate_listbox_active1
  }
  $iif($sline(%ratsignal.WINDOWNAME,1),Toggle Code Red $+ $chr(58) $left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)): {
    if ($gettok($hget(ratsignal_active,$gettok($cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)),1,124)),3,59) == OK) {
      hadd ratsignal_active $cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)) $puttok($hget(ratsignal_active,$gettok($cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)),1,124)),NOTOK,3,59)
    }
    else {
      hadd ratsignal_active $cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)) $puttok($hget(ratsignal_active,$gettok($cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)),1,124)),OK,3,59)
    }
    ratsignal_repopulate_listbox_active1
  }
  $iif($sline(%ratsignal.WINDOWNAME,1),Toggle Platform $+ $chr(58) $left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)): {
    if ($gettok($hget(ratsignal_active,$gettok($cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)),1,124)),4,59) == PC) {
      hadd ratsignal_active $cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)) $puttok($hget(ratsignal_active,$gettok($cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)),1,124)),XB,4,59)
    }
    else {
      hadd ratsignal_active $cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)) $puttok($hget(ratsignal_active,$gettok($cmdr_to_irc($left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)),1,124)),PC,4,59)
    }
    ratsignal_repopulate_listbox_active1
  }
  $iif($sline(%ratsignal.WINDOWNAME,1),Opened $+ $chr(58) $duration($calc($ctime - $gettok($hget(ratsignal_active,$left($strip($gettok($sline(%ratsignal.WINDOWNAME,1),1,124)),-1)),7,59)),2) ago): halt
  -
  $iif(%ratsignal.test.flag == $true,Disable Test Flag): set %ratsignal.test.flag $false
  -
  Quiet $duration($calc($ctime - %ratsignal.temp.ctime),3) Record $+ $chr(58) $duration($gettok($hget(ratsignal_count,_quiet.max),1,59),2) $chr(59) $ctime_to_asctime($gettok($hget(ratsignal_count,_quiet.max),2,59)):halt
  -
  Last 01h $+ $chr(58) $hget(ratsignal_count,_h01) $+ $chr(32) $+ $chr(32) $+ $chr(32) $+ $chr(32) $+ $chr(32) $+ $chr(32) $+ $chr(32) $+ [[ $+ $ctime_to_asctime($hget(ratsignal_count,_h01.max)) $+ ]]: halt
  Last 24h $+ $chr(58) $hget(ratsignal_count,_h24) $+ $chr(32) $+ $chr(32) $+ $chr(32) $+ $chr(32)$+ [[ $+ $ctime_to_asctime($hget(ratsignal_count,_h24.max)) $+ ]]: halt
  $iif(%ratsignal.test.flag == $true,Last 07d $+ $chr(58) $hget(ratsignal_count,_d07) $+ $chr(32) $+ $chr(32) $+ $chr(32) $+ [[ $+ $ctime_to_asctime($hget(ratsignal_count,_d07.max)) $+ ]]): halt
  $iif(%ratsignal.test.flag == $true,Last 30d $+ $chr(58) $hget(ratsignal_count,_d30) [[ $+ $ctime_to_asctime($hget(ratsignal_count,_d30.max)) $+ ]]): halt
  -
  $iif(%ratsignal.clipboard.newsys == $true,$style(1)) Copy System name to Clipboard: ratsignal_toggle_system2clip
  $iif(%ratsignal.open.pw == $true,$style(1)) Open Paperwork: ratsignal_toggle_open_pw
  Show in Listbox
  .$iif(%ratsignal.list.pc == $true,$style(1)) PC: ratsignal_toggle_list_pc
  .$iif(%ratsignal.list.xb == $true,$style(1)) XB: ratsignal_toggle_list_xb
  .$iif(%ratsignal.list.inactive == $true,$style(1)) Inactive: ratsignal_toggle_list_inactive
  $iif(%ratsignal.speak.override == $true,$style(1)) Text-To-Speech Options
  .$iif(%ratsignal.speak.override == $true,$style(1)) Enabled: ratsignal_toggle_speak_override
  .Volume $int($calc(%speakvolume / 655.35)) $+ %: {
    var %newvol $$?="New volume: 0-100%"
    set %speakvolume $ceil($calc(%newvol * 655.35))
  }
  .Code Red Phrase " $+ %ratsignal.speak.cred $+ ": set %ratsignal.speak.cred $$?="Speak this phrase on code red ratsignals:"
  .$iif(%ratsignal.speak.pc == $true,$style(1)) PC: ratsignal_toggle_speak_pc
  .$iif(%ratsignal.speak.xbox == $true,$style(1)) XB: ratsignal_toggle_speak_xbox
  .$iif(%ratsignal.speak.clears == $true,$style(1)) Clears: ratsignal_toggle_speak_clears
  .$iif(%ratsignal.speak.quits == $true,$style(1)) Quits: ratsignal_toggle_speak_quits
  .$iif(%ratsignal.speak.rejoins == $true,$style(1)) Rejoins: ratsignal_toggle_speak_rejoins
  -
  $iif($regex($cb,/[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}/),View case by UUID (from clipboard)): run -p http://api.fuelrats.com/rescues/view/ $+ $cb
  -
  $$iif(%ratsignal.test.flag == $true,Repopulate Listbox)
  .Current Cases: ratsignal_repopulate_listbox_active1
  ;  .From inactive hashtable: ratsignal_repopulate_listbox_inactive1
  .Cleared Cases: ratsignal_repopulate_listbox_cleared1
  -
  $$iif(%ratsignal.test.flag == $true,Insert Missed Ratsignal): {
    var %missed_nick = $$?="IRC Nickname? (no spaces)"
    var %missed_case = $$?="Case #? (include the #)"
    var %missed_cred = $$?="O2: OK, NOT OK?"
    var %missed_plat = $$?="Platform?"
    var %missed_sys = $$?="System?"
    var %missed_when = $$?="When? (22:03:59 Nov 12 1955)"
    hadd ratsignal_active %missed_nick %missed_nick $+ $chr(59) $+ %missed_case $+ $chr(59) $+ %missed_cred $+ $chr(59) $+ %missed_plat $+ $chr(59) $+ %missed_sys $+ $chr(59) $+ 7English $+ $chr(59) $+ $ctime(%missed_when)
    ratsignal_repopulate_listbox_active1
  }
  -
  $$iif(%ratsignal.test.flag == $true,Hashtable Viewer): dialog -md ratsignal_hashtables ratsignal_hashtables
  -
  $iif(%ratsignal.test.flag == $true,Search Last Clear)
  .?: echo 10 -tg #ratchat $ratsignal_search1($$?="CMDR Name?")
  .Clipboard: echo 10 -tg #ratchat $ratsignal_search1($cb)
  -
  $iif(%ratsignal.test.flag == $true,Test Signals)
  .$$iif(%ratsignal.test.flag == $true,Insert)
  ..Test Spaces:ratsignal_parse_0 RATSIGNAL - CMDR I Like Spaces - System: Foo - Platform: PC - O2: 4NOT OK - Language: English (en-US) - IRC Nickname: I_Like_Spaces (Case #99)
  ..Test NSpace:ratsignal_parse_0 RATSIGNAL - CMDR IHateSpaces - System: Foo - Platform: PC - O2: 4NOT OK - Language: English (en-US) (Case #99)
  ..Ratsignal?:ratsignal_parse_0 $$?="Enter Ratsignal line to add"
  .Clear
  ..I Like Spaces:ratsignal_clear_0 I Like Spaces
  ..IHateSpaces:ratsignal_clear_0 IHateSpaces
  ..CMDR?:ratsignal_clear_0 $$?="Enter CMDR name to clear"
  -
  $iif(%ratsignal.test.flag == $true,Echo Last)
  .$iif(%ratsignal.test.flag == $true,Filtered):echo @TEST 11CMDR  $+ %ratsignal.TEMP.CMDR $+  %ratsignal.TEMP.CASE %ratsignal.TEMP.PLATFORM %ratsignal.TEMP.SYSTEM %ratsignal.TEMP.LANG
  .$iif(%ratsignal.test.flag == $true,Full):echo @TEST %ratsignal.TEMP.LINE
  .$iif(%ratsignal.test.flag == $true,Both): {
    echo @TEST 11CMDR  $+ %ratsignal.TEMP.CMDR $+  %ratsignal.TEMP.CASE %ratsignal.TEMP.PLATFORM %ratsignal.TEMP.SYSTEM %ratsignal.TEMP.LANG
    echo @TEST %ratsignal.TEMP.LINE
  }
  .$iif(%ratsignal.test.flag == $true,All): {
    echo @TEST %ratsignal.TEMP.CMDR
    echo @TEST %ratsignal.TEMP.NICK
    echo @TEST %ratsignal.TEMP.CASE
    echo @TEST %ratsignal.TEMP.PLATFORM
    echo @TEST %ratsignal.TEMP.SYSTEM
    echo @TEST %ratsignal.TEMP.LANG
    echo @TEST %ratsignal.TEMP.CTIME $asctime(%ratsignal.TEMP.CTIME,HH:nn:ss mmm dd)
  }
  -
  $iif(%ratsignal.test.flag == $true,Edit Old Ini File $bytes($file($logdir $+ Ratsignal.ini).size,k) $+ k):/run "C:\Program Files (x86)\Notepad++\notepad++.exe" $logdir $+ Ratsignal.ini
  $iif(%ratsignal.test.flag == $true,Edit Old Log File $bytes($file($logdir $+ @Ratsignal.log).size,k) $+ k):/run "C:\Program Files (x86)\Notepad++\notepad++.exe" $logdir $+ @Ratsignal.log
  -
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
menu channel {
  -
  fuelrats.ini
  .Last Case
  ..$duration($calc($ctime - %ratsignal.TEMP.CTIME),1) ago: halt
  ..CMDR $strip(%ratsignal.TEMP.CMDR): set %ratsignal.TEMP.CMDR $$?="New last CMDR?"
  ..IRC Nick $+ $chr(58) $strip(%ratsignal.TEMP.NICK): set %ratsignal.TEMP.NICK $$?="New last NICK?"
  ..Case $+ $chr(58) $strip(%ratsignal.TEMP.CASE): halt
  ..Platform $+ $chr(58) $strip(%ratsignal.TEMP.PLATFORM): halt
  ..System $+ $chr(58) $strip(%ratsignal.TEMP.system): set %ratsignal.TEMP.SYSTEM $$?="New last system?"
  ..Language $+ $chr(58) $strip(%ratsignal.TEMP.LANG): halt
  .Last Clear
  ..CMDR %ratsignal.CLEARED: halt
  ..1st Limpet $+ $chr(58) %ratsignal.CLEARED_RAT: halt
  ..PW $+ $chr(58) %ratsignal.CLEARED_PW: run %ratsignal.CLEARED_PW
  ..Duration $+ $chr(58) $duration($calc($gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.CLEARED_NICK,1)),8,59) - $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.CLEARED_NICK,1)),7,59)),1): halt
  ..Cleared $+ $chr(58) $duration($calc($ctime - $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.CLEARED_NICK,1)),8,59)),1) ago: halt
  ;;; Some Dispatch & Rat commands and lingo
  .-
  .!kgbfoam: msg #fuelrats !kgbfoam $?="CMDR Name?"
  .!list: msg MechaSqueak[BOT] !list
  .-
  .Rat
  ..fr+: msg #fuelrats fr+
  ..fr-: msg #fuelrats fr-
  ..wr+: msg #fuelrats wr+
  ..wr-: msg #fuelrats wr-
  ..bc+: msg #fuelrats bc+
  ..bc-: msg #fuelrats bc-
  ..inst+: msg #fuelrats inst+
  ..inst-: msg #fuelrats inst-
  ..fuel+: msg #fuelrats fuel+
  ..fuel-: msg #fuelrats fuel-
  ..db+: msg #fuelrats db+
  ..pw-: msg #fuelrats pw+
  .Dispatch
  ..!prep: msg #fuelrats !prep $$?="Case# / CMDR Name?"
  ..!assign|!add|!go: msg #fuelrats !assign $$?="Case# / CMDR Name?" $$?="Rat(s)?"
  ..!unassign: msg #fuelrats !unassign $$?="Case# / CMDR Name?" $$?="Rat(s)?"
  ..!active: msg #fuelrats !active $$?="Case# / CMDR Name?"
  ..!sc: msg #fuelrats !sc $$?="CMDR Name?"
  ..!cr: msg #ratchat !cr $$?="Case# to mark CODE RED?"
  ..!cmdr: msg #ratchat !cmdr $$?="Case#?" $$?="New CMDR Name?"
  ..!ircnick: msg #ratchat !ircnick $$?="Case#/CMDR Name?" $$?="New IRC Nick?"
  ..!sys: msg #ratchat !sys $$?="Case#?" $$?="New System Name?"
  ..!clear|!close: msg #ratchat !clear $$?="Case# / Client to CLEAR?" $?="First limpet?"
  ..!md: msg #ratchat !md $$?="Case# / Client to Mark for Deletion?" $?="What?" $?="Reason?"
  ..!inject: msg #ratchat !inject $$?="Case# / Client to add INJECT?" $$?="What?"
  ..!grab: msg #ratchat !grab $$?="Client to GRAB last line of text?"
  ..PC
  ...!pcfr: msg #fuelrats !pcfr $$?="CMDR Name?"
  ...!pcwing: msg #fuelrats !pcwing $$?="CMDR Name?"
  ...!pcbeacon: msg #fuelrats !pcbeacon $$?="CMDR Name?"
  ...!pcquit: msg #fuelrats !pcquit $$?="CMDR Name?"
  ...!pcmodules: msg #fuelrats !pcmodules $$?="CMDR Name?"
  ...!pc: msg #ratchat !pc $$?="Client to set PC?"
  ..XB
  ...!xfr: msg #fuelrats !xbfr $$?="CMDR Name?"
  ...!xwing: msg #fuelrats !xwing $$?="CMDR Name?"
  ...!xbeacon: msg #fuelrats !xbeacon $$?="CMDR Name?"
  ...!xquit: msg #fuelrats !xquit $$?="CMDR Name?"
  ...!xmodules: msg #fuelrats !xmodules $$?="CMDR Name?"
  ...!xb: msg #ratchat !xb $$?="Client to set XBox?"
  -
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
menu query {
  -
  $iif($$1 == MechaSqueak[BOT],MechaSqueak[BOT])
  .$iif($$1 == MechaSqueak[BOT],Clear Window):clear
  .$iif($$1 == MechaSqueak[BOT],Current Cases)
  ..$iif($$1 == MechaSqueak[BOT],Cases (!list)):msg $$1 !list
  ..$iif($$1 == MechaSqueak[BOT],Assigned Rats (!list -r)):msg $$1 !list -r
  ..$iif($$1 == MechaSqueak[BOT],UUID (!list -@)):msg $$1 !list -@
  ..$iif($$1 == MechaSqueak[BOT],Inactive (!list -i)):msg $$1 !list -i
  ..$iif($$1 == MechaSqueak[BOT],Unassigned (!list -u)):msg $$1 !list -u
  .$iif($$1 == MechaSqueak[BOT],Search Last System)
  ..!search  $strip(%ratsignal.temp.system):msg $$1 !search $strip(%ratsignal.temp.system)
  .$iif($$1 == MechaSqueak[BOT],Search ?):msg $$1 !search $$?="System?"
  .$iif($$1 == MechaSqueak[BOT],Quote $chr(35)):msg $$1 !quote $$?="Which case #?"
  .$iif($$1 == MechaSqueak[BOT],Help):msg $$1 !help
  -
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Are you shitting me? 1555 lines wtf
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
