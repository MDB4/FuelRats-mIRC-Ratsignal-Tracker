---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Open custom window, hash table action, set & unset some vars
on *:LOAD: {
  set %ratsignal.WINDOWNAME @RatsignalTEST

  if ($window(%ratsignal.WINDOWNAME) == $null) {
    window -Dl67Rz %ratsignal.WINDOWNAME
    log on %ratsignal.WINDOWNAME -f $logdir $+ %ratsignal.WINDOWNAME $+ .log
    if $isfile($logdir $+ %ratsignal.WINDOWNAME $+ .log) {
      loadbuf -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
    }
  }

  ratsignal_make_htables
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
on *:EXIT: {
  ratsignal_save_htables
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; RATSIGNAL - CMDR volwrath - System: Tiethay - Platform: PC - O2: OK - Language: English (en-US) (Case #9)
;;; RATSIGNAL - CMDR seancassidy145 - System: Scorpii Sector ZE-A c19 - Platform: PC - O2: OK - Language: English (en-US) - IRC Nickname: seancassidy145 (Case #2)
on *:text:*RATSIGNAL*:#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    set %ratsignal.LAST.LINE $1-
    set %ratsignal.LAST.CTIME $ctime
    ratsignal_speak $1-
    ratsignal_parse_0 $1-
    ;ratsignal_parse_1 $1-
    ;timer_cmdr_to_irc 1 1 echo -g @TEST 11CMDR: %ratsignal.TEMP.CMDR 10Nick: $cmdr_to_irc(%ratsignal.TEMP.CMDR)
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; David_Windlow's case opened with: "R@SIGNAL Puppis Sector YE-R A4-6 PC"  (Case 0, PC, Puppis Sector YE-R a4-6)
on *:text:*case opened with*:#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    myspeak Manual ratsignal
    ratsignal_parse_manual $1-
    if (%ratsignal.test.flag ==$true) { echo -t @TEST Manual R@SIGNAL }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Received R@SIGNAL from Mystifur.  Calling all available rats!  (Case 4, PC, Col 285 Sector ID-E a14-1)
;;; Received R@SIGNAL from GoRzA[PC].  Calling all available rats!  (Case 2, Crucis Sector HH-M a7-0)
;;; Received R@SIGNAL from anuclearerror.  Calling all available rats!  (Case 6, PC, NLTT 48288)
;;; Received R@SIGNAL from Coffee_Pot.  Calling all available rats!  (Case 7, PC)
on *:text:Received R@SIGNAL*:#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    myspeak Self ratsignal
    ratsignal_parse_self $1-
    if (%ratsignal.test.flag ==$true) { echo -t @TEST Self R@SIGNAL }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Case Albert Einstein cleared! Lawrence Crawley, do the Paperwork: http://t.fuelr.at/27a
;;; Case Pazter cleared! Do the Paperwork: http://t.fuelr.at/1pw
on *:text:*cleared!*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    if ($1 == Case) {
      ratsignal_clear_0 $1-
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Clapton[Dispatch]: Closing case of client_10894 (Case #8ee339d4-6282-4eb6-a8e9-0bbae1bb21fd) and adding it to the Marked for Deletion Listâ„¢.
;on *:TEXT:*and adding it to the Marked for Deletion List*:#RatChat,#fuelrats: {
;if ($nick == MechaSqueak[BOT]) {
;}
;}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Catches !delete
on *:text:*THIS IS NOT REVERTABLE*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    echo -gt %ratsignal.WINDOWNAME 10 $+ $1 4 $+ $2 10 $+ $3 $6
    ;ratsignal_log_reload
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; ravenmadcat's case is now active
on *:TEXT:*case is now active:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    if ($regex($1-,/^(.*)'s.*/) > 0) {
      ;      ratsignal_move_active $cmdr_to_irc($regml(1)) ratsignal_inactive
      echo -tg %ratsignal.WINDOWNAME 10 $+ $1-
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; ravenmadcat's case is now inactive
on *:TEXT:*case is now inactive:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    if ($regex($1-,/^(.*)'s.*/) > 0) {
      ;      ratsignal_move_inactive $cmdr_to_irc($regml(1)) ratsignal_active
      echo -tg %ratsignal.WINDOWNAME 10 $+ $1-
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; Client for case 6 is now CMDR Angry Feetus
on *:text:Client for case*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    echo -t %ratsignal.WINDOWNAME 10 $+ $1-
    loadbuf 250 -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
    if (%ratsignal.speak.override == $true) myspeak Case $4 updated to $8-
    ;    if ($chr(35) $+ $4 == %ratsignal.LAST.CASE) {
    ;      ;;; REALLY NEED TO BE ABLE TO TRACK THIS IN THE HASH TABLE!!!! Currently only works if done on the most recent ratsignal.
    ;      ratsignal_rename $cmdr_to_irc(%ratsignal.LAST.CMDR) $cmdr_to_irc($8-) ratsignal_active
    ;      rline -nl %ratsignal.WINDOWNAME 1 $8- $chr(124) %ratsignal.LAST.CASE $chr(124) %ratsignal.LAST.PLATFORM $chr(124) %ratsignal.last.system $chr(124) %ratsignal.LAST.LANG $chr(124) $asctime(%ratsignal.last.ctime,HH:nn:ss mmm dd)
    ;      set %ratsignal.LAST.CMDR $8-
    ;    }
    var %case = $chr(35) $+ $4
    var %cmdr = $8-
    hadd -m ratsignal_casenum %case %cmdr $ctime

    ;;; Locate and rename the hashtable entry. Search the ratsignal_active hashtable for an entry with a matching case number and rename it if only one is found, else echo number of matches.
    if ($hfind(ratsignal_active,%case,0,r).data = 1) {
      ratsignal_rename $hfind(ratsignal_active,%case,1,r).data $cmdr_to_irc($8-) ratsignal_active
    }
    else { echo -t %ratsignal.WINDOWNAME $hfind(ratsignal_active,%case,0,r).data matches for Case %case, cannot update ratsignal_active hashtable }

    ;;; Locate and update the listbox entry. Search the listbox for an entry with a matching case number and update it if only one is found, else echo number of matches.
    if ($fline(%ratsignal.WINDOWNAME,%case,0,3) = 1) {
      rline -l %ratsignal.WINDOWNAME $fline(%ratsignal.WINDOWNAME,%case,1,3) $replace($line(%ratsignal.WINDOWNAME,$fline(%ratsignal.WINDOWNAME,%case,1,3),1), $hfind(ratsignal_active,%case,1,r).data, $cmdr_to_irc($8-))
    }
    else { echo -t %ratsignal.WINDOWNAME $fline(%ratsignal.WINDOWNAME,%case,0,3) matches for Case %case, cannot update %ratsignal.WINDOWNAME listbox }

  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
; [Dspatch]: Location of Zher0h set to V1090 Herculis
; Tom_X[PC]: Location of Deltron Osiris set to col 285 sector rk-a a16-1 (not in EDSM)
; Stillian[PC|Dispatch]: Location of Crucifix set to Alrai Sector CB-O a6-0
on *:text:*Location of*:#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    echo -t %ratsignal.WINDOWNAME 10 $+ $2-
    loadbuf 250 -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Capture UUID's
;; $regex($cb,/[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}/)
;; Catches UUID on !quote
on *:TEXT:*) opened*:*: {
  if ($nick == MechaSqueak[BOT]) {
    if ($regex($1-,/(.*) at/i) > 0) {
      var %ratsignal.quote.echoline1T = $remove($regml(1),'s,case )
      if ($regex($1-,/@(.*)/i) > 0) {
        var %ratsignal.quote.echoline2T = $regml(1)
      }
    }
    if ($regex($1-,/(.*)'s case/i) > 0) {
      ; $regml(1) holds CMDR Name
      set %ratsignal.quote.cmdrT $cmdr_to_irc($regml(1))
    }

    if ($regex($1-,/case (.*) at/i) > 0) {
      ; $regml(1) holds Case # (with #)
      set %ratsignal.quote.case $regml(1)
    }

    if ($regex($1-,/\@(.*)/i) > 0) {
      ; $regml(1) holds UUID

      if ($hfind(ratsignal_uuid,%ratsignal.quote.cmdrT,0,n) > 0) {
        if (%ratsignal.test.flag == $true) { echo -tg %ratsignal.WINDOWNAME 10UUID: Updating %ratsignal.quote.echoline1T }
        hadd ratsignal_uuid %ratsignal.quote.cmdrT %ratsignal.quote.case $regml(1) $ctime
        ratsignal_save_htables
        halt
      }

      hadd ratsignal_uuid %ratsignal.quote.cmdrT %ratsignal.quote.case $regml(1) $ctime
      ratsignal_save_htables
      if (%ratsignal.test.flag == $true) {
        echo -t %ratsignal.WINDOWNAME 10UUID: %ratsignal.quote.echoline1T %ratsignal.quote.echoline2T
        loadbuf 250 -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
      }
    }

  }
}

on *:TEXT:*R@SIGNAL*:*: {
  if ($nick == MechaSqueak[BOT]) {
    ;var %rsig = $regsubex($1-,\[[0-9]\],$null)
    ;var %rsig = $regsubex(%rsig,.*(@).*,RATSIGNAL)
    ;var %rsig = $ratsignal_parse_1(%rsig %ratsignal.quote.case)
    ;echo -s %rsig
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Calculates number of active + inactive cases when someone does a !list
on *:text:*active case*:?,#RatChat,#fuelrats: {
  if ($nick == MechaSqueak[BOT]) {
    set %ratsignal.last.list $1-
    if ($regex($1-,/(.*) active/) > 0) {
      set -u60 %ratsignal.botcases.active $regml(1)
      if (%ratsignal.botcases.active == No) { set -u60 %ratsignal.botcases.active 0 }
    }
    if ($regex($1-,/; (.*) inactive/) > 0) {
      set -u60 %ratsignal.botcases.inactive $regml(1)
      if (%ratsignal.botcases.inactive == No) { set -u60 %ratsignal.botcases.inactive 0 }
    }
    set -u60 %ratsignal.BOTCASES $calc(%ratsignal.botcases.active + %ratsignal.botcases.inactive)

    if (($chan == #fuelrats) || ($chan == #RatChat)) {
      echo -t %ratsignal.WINDOWNAME 7 $+ $chan Number of Cases: $calc(%ratsignal.botcases.active + %ratsignal.botcases.inactive) $chr(40) $+ %ratsignal.botcases.active active $chr(43) %ratsignal.botcases.inactive inactive $+ $chr(41)
    }
    else {
      ;;; Don't save to logfile if the !list is done in other than #fr or #rc
      echo -gt %ratsignal.WINDOWNAME 8 $+ Number of Cases: $calc(%ratsignal.botcases.active + %ratsignal.botcases.inactive) $chr(40) $+ %ratsignal.botcases.active active $chr(43) %ratsignal.botcases.inactive inactive $+ $chr(41)
    }
    if (%ratsignal.test.flag == $true) {
      echo -sg $ratsignal_parse_list($1-)
      if (%ratsignal.botcases != $hget(ratsignal_active, 0).item) {
        myspeak Mismatch. %ratsignal.botcases botcases, and $hget(ratsignal_active, 0).item) hashtable cases.
      }
      else { myspeak %ratsignal.botcases botcases }
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Notifier for client IRC reconnection
on *:text:*has reconnected*:#fuelrats,#RatChat: {
  if ($nick == MechaSqueak[BOT]) {
    echo -gt %ratsignal.WINDOWNAME 8 $+ $replace($1-,has,$null,to the IRC!,$null)
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
on !*:JOIN:#fuelrats: {
  If ($nick == MechaSqueak[BOT]) {
    if ((%ratsignal.speak.override == $true) && (%ratsignal.speak.rejoins == $true)) myspeak $nick has reconnected
  }
  if (fuelrats.com !isin $address) {
    if ($hfind(ratsignal_active,$nick,0,r) > 0) {
      ;    if ($fline(%ratsignal.WINDOWNAME,$nick,1,3) != $null) {
      if ((%ratsignal.speak.override == $true) && (%ratsignal.speak.rejoins == $true)) myspeak Client $replace($nick,$chr(95),$chr(32)) has reconnected
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Notifier for client IRC PART
on !*:PART:#fuelrats: {
  if (fuelrats.com !isin $address) {
    if ($hfind(ratsignal_active,$nick,0,r) > 0) {
      ;    if ($fline(%ratsignal.WINDOWNAME,$cmdr_to_irc($nick) $+ .*,1,3) != $null) {
      echo -t $chan 8 $nick 4 $+ PARTED $+  $address
      if ((%ratsignal.speak.override == $true) && (%ratsignal.speak.rejoins == $true)) myspeak active client $replace($nick,$chr(95),$chr(32)) has parted $chan
    }
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Notifier for client IRC QUIT
on !*:QUIT: {
  if (fuelrats.com !isin $address) {
    if ($hfind(ratsignal_active,$nick,0,r) > 0) {
      ;    if ($fline(%ratsignal.WINDOWNAME,$cmdr_to_irc($nick),1,3) != $null) {
      echo -t #fuelrats 8 $+ $nick 4 $+ QUIT $+  $address
      if ((%ratsignal.speak.override == $true) && (%ratsignal.speak.rejoins == $true)) myspeak active client $replace($nick,$chr(95),$chr(32)) has quit
    }
  }
  If ($nick == MechaSqueak[BOT]) {
    if (%ratsignal.speak.override == $true) myspeak $nick has quit
    echo -t #fuelrats 8 $nick 4 $+ QUIT $+  $address
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Notifier for PC rat calls
on *:text:$($+(*,PC rat,*)):#fuelrats,#RatChat: {
  if (%ratsignal.speak.override == $true) myspeak $nick calls for pc rats
  echo -gt %ratsignal.WINDOWNAME 15 $+ $1-
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------















---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_make_htables {
  hmake ratsignal_active 50 | hmake ratsignal_inactive 50 | hmake ratsignal_cleared 5000 | hmake ratsignal_uuid 5000 | hmake ratsignal_count 2000 | hmake ratsignal_casenum 10
  if ($isfile(ratsignal_active.htb)) hload ratsignal_active ratsignal_active.htb
  else hsave ratsignal_active ratsignal_active.htb
  if ($isfile(ratsignal_inactive.htb)) hload ratsignal_inactive ratsignal_inactive.htb
  else hsave ratsignal_inactive ratsignal_inactive.htb
  if ($isfile(ratsignal_cleared.htb)) hload ratsignal_cleared ratsignal_cleared.htb
  else hsave ratsignal_cleared ratsignal_cleared.htb
  if ($isfile(ratsignal_count.htb)) hload ratsignal_count ratsignal_count.htb
  else hsave ratsignal_count ratsignal_count.htb
  if ($isfile(ratsignal_uuid.htb)) hload ratsignal_uuid ratsignal_uuid.htb
  else hsave ratsignal_uuid ratsignal_uuid.htb
  if ($isfile(ratsignal_casenum.htb)) hload ratsignal_casenum ratsignal_casenum.htb
  else hsave ratsignal_casenum ratsignal_casenum.htb
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_save_htables {
  hsave ratsignal_active ratsignal_active.htb
  hsave ratsignal_inactive ratsignal_inactive.htb
  hsave ratsignal_cleared ratsignal_cleared.htb
  hsave ratsignal_count ratsignal_count.htb
  hsave ratsignal_uuid ratsignal_uuid.htb
  hsave ratsignal_casenum ratsignal_casenum.htb
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_parse_0 {
  ratsignal_add_0 $1-
}
alias ratsignal_add_0 {
  ;;; Attempts to break up the RATSIGNAL into components: CMDR, System, Platform, O2 Status, Language, IRC Nickname, Case #
  ;;; <%MechaSqueak[BOT]> RATSIGNAL - CMDR Mr TestCmdr - System: Sol - Platform: PC - O2: OK - Language: English (en-US) (Case #0)
  ;;; <%MechaSqueak[BOT]> RATSIGNAL - CMDR Mr TestCmdr - System: Sol - Platform: PC - O2: OK - Language: English (en-US) - IRC Nickname: Mr_TestCmdr (Case #0)
  ;  echo -t %ratsignal.WINDOWNAME $1-

  unset %ratsignal.TEMP*
  unset %ratsignal.TEMP.*
  set %ratsignal.TEMP.LINE $strip($1-)
  ;$remove(%ratsignal.TEMP.LINE,RATSIGNAL - CMDR , - System, - Platform, - O2, - Language, - IRC Nickname)
  set %ratsignal.TEMP.CTIME $ctime
  ratsignal_set_hourly_hash $1-

  ;;; Semicolons in the language token break language & time tracking in the listbox
  ;;; RATSIGNAL - CMDR cacarotto3345 - System: frey - Platform: PC - O2: OK - Language: Spanish; Castilian (es) (Case #6)

  if ($chr(59) isin %ratsignal.TEMP.LINE) {
    set %ratsignal.TEMP.LINE = $remove(%ratsignal.TEMP.LINE,$chr(59))
  }

  tokenize 58 %ratsignal.TEMP.LINE
  ; $1 = CMDR
  ; $2 = SYST
  ; $3 = PLAT
  ; $4 = CRED
  ; $5 = LANG
  ; $6 = NICK
  ;
  ;******************************************************************************************************************************
  ;  set %ratsignal.TEMP.CMDR $replace($1,RATSIGNAL - CMDR ,$null, - System,$null)
  set %ratsignal.TEMP.CMDR $remove($1,RATSIGNAL - CMDR , - System)
  set %ratsignal.TEMP.SYSTEM 8 $remove($2, - Platform) 
  set %ratsignal.TEMP.PLATFORM $remove($3, - O2)
  if (PC isin %ratsignal.TEMP.PLATFORM) set %ratsignal.TEMP.PLATFORM 11 $remove($3, - O2) 
  if (XB isin %ratsignal.TEMP.PLATFORM) set %ratsignal.TEMP.PLATFORM 3 $remove($3, - O2) 
  set %ratsignal.TEMP.CR $remove($4, - Language)
  set %ratsignal.TEMP.LANG 7 $remove($5, - IRC Nickname) 
  if ($regex(%ratsignal.TEMP.LINE,Nickname: ([0-9a-zA-Z_]*)) > 0) {
    set %ratsignal.TEMP.NICK $regml(1)
  }
  else {
    set %ratsignal.TEMP.NICK $replace($right(%ratsignal.TEMP.CMDR,-1),$chr(32),$chr(95),$chr(46),$null,$chr(126),$null)
    set %ratsignal.TEMP.LANG $regsubex(%ratsignal.TEMP.LANG,\(Case #[0-9]+\),$null)
  }

  if ($regex(%ratsignal.TEMP.LINE,(#[0-9]+)) > 0) {
    set %ratsignal.TEMP.CASE $regml(1)
    if (NOT isin %ratsignal.TEMP.CR) set %ratsignal.TEMP.CASE 4 $+ $regml(1) $+ 
  }

  hadd -m ratsignal_active %ratsignal.TEMP.NICK %ratsignal.TEMP.CMDR $chr(59) %ratsignal.TEMP.CASE $chr(59) %ratsignal.TEMP.CR $chr(59) %ratsignal.TEMP.PLATFORM $chr(59) %ratsignal.TEMP.SYSTEM $chr(59) %ratsignal.TEMP.LANG $chr(59) %ratsignal.TEMP.CTIME
  hadd -m ratsignal_casenum $strip(%ratsignal.TEMP.CASE) %ratsignal.TEMP.CMDR $ctime

  iline -nl %ratsignal.WINDOWNAME 1 $&
    $replace( $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),1,59) $chr(59) $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),2,59) $chr(59) $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),4,59) $chr(59) $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),5,59) $chr(59) $&
    $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),6,59) $chr(59) $&
    $asctime($gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),7,59),HH:nn:ss mmm dd) $&
    ,$chr(59),$chr(124))

  ; went at end of 1st $gettok line (before line continue), shows nickname on announce line: $hfind(ratsignal_active,%ratsignal.TEMP.NICK,1) $chr(59) 
  ; went on 3rd line (in sequence with the rest), shows O2 status: $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),3,59) $chr(59) $&
  ; went on last line(in sequence), shows signal time: $asctime($gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),7,59),HH:nn:ss mmm dd) $&
  echo -t %ratsignal.WINDOWNAME $&
    11 $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),1,59)  $+ $chr(7) $&
    $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),2,59) $+ $chr(7) $&
    $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),4,59) $+ $chr(7) $&
    $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),5,59) $+ $chr(7) $&
    $+ $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.TEMP.NICK,1)),6,59) $chr(7)

  if $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRD) {
    var %ratsignal.oldsystem = $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,SYS0)
    echo -t #fuelrats 11Last clear of %ratsignal.TEMP.CMDR $+ $chr(58) $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRD) $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRT) $chr(45) GMT $+ $asctime(z) $chr(45) $duration($calc($ctime - $ctime($readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRD) $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRT))),2) ago $+ $chr(44) in 0 $+ %ratsignal.oldsystem $+ 11 $+ $chr(46) Paperwork: $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,PAPW)
    echo -t %ratsignal.WINDOWNAME 4Repeat: 11 $+ $duration($calc($ctime - $ctime($readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRD) $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,CLRT))),2) ago.10 $readini($logdir $+ Ratsignal.ini,%ratsignal.TEMP.CMDR,PAPW)
    if (%ratsignal.speak.override == $true) myspeak %ratsignal.TEMP.CMDR is a repeat client
  }
  else {
    if (%ratsignal.test.flag == $true) { echo -t #fuelrats 10No INI record for %ratsignal.TEMP.CMDR }
  }

  if ($hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,0,n) > 0) {
    ;echo -t #fuelrats 11Last clear of %ratsignal.TEMP.NICK $+ $chr(58) $readini($logdir $+ Ratsignal.ini,%ratsignal.LAST.CMDR,CLRD) $readini($logdir $+ Ratsignal.ini,%ratsignal.LAST.CMDR,CLRT) $chr(45) GMT $+ $asctime(z) $chr(45) $duration($calc($ctime - $ctime($readini($logdir $+ Ratsignal.ini,%ratsignal.LAST.CMDR,CLRD) $readini($logdir $+ Ratsignal.ini,%ratsignal.LAST.CMDR,CLRT))),2) ago $+ $chr(44) in 0 $+ %ratsignal.oldsystem $+ 11 $+ $chr(46) Paperwork: $readini($logdir $+ Ratsignal.ini,%ratsignal.LAST.CMDR,PAPW)
    echo -t #fuelrats 4Repeat:10 $duration($calc($ctime - $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,1)),8,59)),2) ago, from $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,1)),5,59) $+ $chr(46) $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,1)),10,59)
    echo -t %ratsignal.WINDOWNAME 4Repeat:10 $duration($calc($ctime - $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,1)),8,59)),2) ago. $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.TEMP.NICK,1)),10,59)
    if (%ratsignal.speak.override == $true) myspeak %ratsignal.TEMP.CMDR is a repeat client
  }
  else {
    echo -t #fuelrats 10No record for %ratsignal.TEMP.CMDR
  }

  ratsignal_save_htables
  loadbuf 250 -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_parse_1 {
  set %ratsignal.TEMP.LINE $strip($1-)

  if (Nickname: isin $1-) {
    set %ratsignal.TEMP.LINE $remove(%ratsignal.TEMP.LINE,RATSIGNAL - CMDR,- System,- Platform,- O2,- Language,- IRC Nickname)
    ;;;Returns "I Like Spaces : System : PC : NOT OK : English (en-US) : I_Like_Spaces (Case #99)"
    if ($regex(%ratsignal.TEMP.LINE,(#[0-9]+)) > 0) {
      set %ratsignal.TEMP.CASE $regml(1)
    }
    set %ratsignal.TEMP.LINE $regsubex(%ratsignal.TEMP.LINE,\(Case #[0-9]+\),$null)
    tokenize 58 $instok(%ratsignal.TEMP.LINE,%ratsignal.TEMP.CASE,2,58)

    if (NOT isin $5) {
      return $1 $chr(59) $7 $chr(59) 4 $+ $2 $+ | $3 $chr(59) $4 $chr(59) $5 $chr(59) $6 $chr(59) $ctime
    }
    else return $1 $chr(59) $7 $chr(59) $2 $chr(59) $3 $chr(59) $4 $chr(59) $5 $chr(59) $6 $chr(59) $ctime
  }
  else {
    set %ratsignal.TEMP.LINE $remove($1-,RATSIGNAL - CMDR , - System, - Platform, - O2, - Language, - IRC Nickname)
    if ($regex(%ratsignal.TEMP.LINE,(#[0-9]+)) > 0) {
      set %ratsignal.TEMP.CASE $regml(1)
    }
    set %ratsignal.TEMP.LINE $regsubex(%ratsignal.TEMP.LINE,\(Case #[0-9]+\),$null)
    tokenize 58 $instok(%ratsignal.TEMP.LINE,%ratsignal.TEMP.CASE,2,58)

    if (NOT isin $5) {
      return $1 $chr(59) $1 $chr(59) 4 $+ $2 $+ | $3 $chr(59) $4 $chr(59) $5 $chr(59) $6 $chr(59) $ctime
    }
    else return $1 $chr(59) $1 $chr(59) $2 $chr(59) $3 $chr(59) $4 $chr(59) $5 $chr(59) $6 $chr(59) $ctime
  }
  ;;; Kashmirz ; #4 ; OK ; 11 PC  ; 8 HIP 18841  ; 7 English (en-US)  ; 1473858005
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_parse_self {
  ;;; Received R@SIGNAL from Airey.  Calling all available rats!  (Case 4, PC)

  if ($regex($4-,/(.*)\./) > 0) {
    set %ratsignal.TEMP.CMDR $regml(1)
    set %ratsignal.TEMP.NICK $cmdr_to_irc($regml(1))    
  }

  if ($regex($4-,/.* \(Case ([0-9]{1,2}),.*/i) > 0) {
    set %ratsignal.TEMP.CASE $chr(35) $+ $regml(1)
  }

  hadd ratsignal_active %ratsignal.TEMP.NICK %ratsignal.TEMP.CMDR $chr(59) %ratsignal.TEMP.CASE  $chr(59) ?? $chr(59) ?? $chr(59) ?? $chr(59) ?? $chr(59) $ctime
  iline -nl %ratsignal.WINDOWNAME 1 %ratsignal.TEMP.CMDR $chr(124) %ratsignal.TEMP.CASE  $chr(124) ?? $chr(59) 8unknown $chr(59) 7unknown $chr(59) asctime(HH:nn:ss mmm dd)
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_parse_manual {
  ;;; David_Windlow's case opened with: "R@SIGNAL Puppis Sector YE-R A4-6 PC"  (Case 0, PC, Puppis Sector YE-R a4-6)

  if ($regex($1-,/(.*)'s.*/) > 0) {
    set %ratsignal.TEMP.CMDR $regml(1)
    set %ratsignal.TEMP.NICK $cmdr_to_irc($regml(1))    
  }

  if ($regex($1-,/.* \(Case ([0-9]{1,2}),.*/i) > 0) {
    set %ratsignal.TEMP.CASE $chr(35) $+ $regml(1)
  }

  hadd ratsignal_active %ratsignal.TEMP.NICK %ratsignal.TEMP.CMDR $chr(59) %ratsignal.TEMP.CASE  $chr(59) ?? $chr(59) ?? $chr(59) ?? $chr(59) ?? $chr(59) $ctime
  iline -nl %ratsignal.WINDOWNAME 1 %ratsignal.TEMP.CMDR $chr(124) %ratsignal.TEMP.CASE  $chr(124) ?? $chr(59) 8unknown $chr(59) 7unknown $chr(59) asctime(HH:nn:ss mmm dd)
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_clear_0 {
  ;;; Uses
  ;;;   %ratsignal.CLEARED       CMDR Name
  ;;;   %ratsignal.CLEARED_NICK  IRC Nick
  ;;;   %ratsignal.CLEARED_RAT   1st Limpet
  ;;;   %ratsignal.CLEARED_PW    Paperwork link

  ;  ;;; If CMDR name is passed use it, else use vars in old version ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;  if ($1 != $null) {
  ;    set %ratsignal.CLEARED $1-
  ;    set %ratsignal.CLEARED_NICK $cmdr_to_irc($1-)
  ;    set %ratsignal.CLEARED_RAT RatMama
  ;    set %ratsignal.CLEARED_PW http://foo.foo
  ;  }

  unset %ratsignal.CLEARED*
  if ($regex($1-,/Case (.*) cleared/i) > 0) {
    set %ratsignal.CLEARED $strip($regml(1))
    set %ratsignal.CLEARED_NICK $cmdr_to_irc(%ratsignal.CLEARED)

    if ($regex($1-,/cleared! (.*) do/i) > 0) {
      set %ratsignal.CLEARED_RAT $left($regml(1),$calc($len($regml(1)) - 1))
    }
    if ($regex($1-,/Paperwork: (.*)/i) > 0) {
      set %ratsignal.CLEARED_PW $regml(1)
    }
  }

  ;;; Halt on known tests
  if ((%ratsignal.CLEARED == MarenTest) || (%ratsignal.CLEARED == testcaseplsignore)) halt

  ;;; If the rat parameter is not used on !clear, assign as Dispatch in logs
  if (%ratsignal.CLEARED_RAT == $null) { set %ratsignal.CLEARED_RAT Dispatch }

  if (%ratsignal.CLEARED_PW == $null) { set %ratsignal.CLEARED_PW http://foo.foo }

  ;;; Create an entry in the active table if a cleared case name isn't found, fill with dummy data so the number of tokens matches when moved to the cleared table
  if ($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.CLEARED_NICK,1)) == $null) {
    hadd -m ratsignal_active %ratsignal.CLEARED_NICK UNTRACKED $chr(59) CASE $chr(59) O2 $chr(59) PLATFORM $chr(59) SYSTEM $chr(59) LANGUAGE $chr(59) 1418688000
  }

  ;;; Log to the Ratsignal window: Cleared CMDR â€¢ Case Duration â€¢ 1st Limpet â€¢ Paperwork
  echo %ratsignal.WINDOWNAME 9 $+ %ratsignal.CLEARED â€¢ $duration($calc($ctime - $gettok($hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.CLEARED_NICK,1)),7,59)),3) 10â€¢ %ratsignal.CLEARED_RAT â€¢ %ratsignal.CLEARED_PW

  ;;; Write into the cleared table
  hadd -m ratsignal_cleared %ratsignal.CLEARED_NICK $hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.CLEARED_NICK,1)) $chr(59) $ctime $chr(59) %ratsignal.CLEARED_RAT $chr(59) %ratsignal.CLEARED_PW

  ;;; Remove from the listbox
  ;  if ($fline(%ratsignal.WINDOWNAME,/.* $+ %ratsignal.CLEARED $+ .*/i,1,3) > 0) {
  if ($fline(%ratsignal.WINDOWNAME,%ratsignal.CLEARED,1,3) > 0) {
    dline -l %ratsignal.WINDOWNAME $fline(%ratsignal.WINDOWNAME,%ratsignal.CLEARED,1,3)
  }

  ;;; Remove from the active table, only if no more of the same name remain in the listbox. Attempt to retain the original signal data, but only the final limpet and paperwork will log into the cleared table, regardless of which duped case # dispatch used.
  ;;; Retains all proper information if and only if each dupe is !clear or !md before the original signal is !clear.
  if ($fline(%ratsignal.WINDOWNAME,%ratsignal.CLEARED,1,3) == $null) {
    hdel ratsignal_active %ratsignal.CLEARED_NICK $hget(ratsignal_active,$hfind(ratsignal_active,%ratsignal.CLEARED_NICK,1))
  }

  ratsignal_save_htables

  if (%ratsignal.CLEARED_RAT isin $me) {
    run -p %ratsignal.CLEARED_PW
  }

  if ((%ratsignal.speak.clears == $true) && (%ratsignal.speak.override == $true)) {
    myspeak Cleared ; %ratsignal.CLEARED
  }

  loadbuf 250 -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------























---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_parse_list {
  ;;; 1 active case: [6]Donoka Ronthier PC; 4 inactive cases: [2]Boomer(CR) PC, [7]ravenmadcat PC, [8]ImpactedDust634 XB, [9]OddJob60 XB
  ;;; %ratsignal.last.list
  ;;; takes $1-
  var %foo $regsub($1-, (([0-9]|No) (active|inactive) (case:|cases:|cases;)), $null, %subvar)
  var %foo $regsubex(%subvar, (([0-9]|No) (active|inactive) (case:|cases:|cases;)), $null)
  return $remove(%foo, PC, XB,(CR)))
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
on 3:text:!lastclear*:#RatChat,#fuelrats,?: {
  query $nick $ratsignal_search0($2-)
}
alias ratsignal_search0 {
  if ($0 < 2) return Search previous cleared cases. Usage: !lastclear <CMDR Name>
  if ($hfind(ratsignal_cleared,$cmdr_to_irc($2),1,w) != $null) {
    tokenize 59 $hget(ratsignal_cleared,$hfind(ratsignal_cleared,$cmdr_to_irc($2),1,w))
    return $1 was last cleared from $strip($5) $duration($calc($ctime - $8),2) ago, by $9 $10
  }
  else return No record of $2-
}
alias ratsignal_search1 {
  if ($0 < 1) return Search previous cleared cases. Usage: $ratsignal_search1(<CMDR Name>)
  if $hfind(ratsignal_cleared,$cmdr_to_irc($1-),1,w) {
    tokenize 59 $hget(ratsignal_cleared,$hfind(ratsignal_cleared,$cmdr_to_irc($1-),1,w))
    return $1 was last cleared from $strip($5) $duration($calc($ctime - $8),2) ago, by $9 $10
  }
  else return No record of $1-
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias cmdr2irc {
  var %reg = /([ _\.\|0-9a-zA-Z]{3,20})/i
  if $regex($1-,%reg) {
    return $cmdr_to_irc($regml(1))
  }
}
alias cmdr_to_irc {
  return $replace($1-,$chr(32),$chr(95),$chr(46),$null,$chr(96),$null,$chr(126),$null)
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_clone_line {
  if ($0 < 4) echo -ag Usage: /ratsignal_clone_line <SOURCEWINDOW> <LINE> <TARGETWINDOW> <LINE>
  rline -l $$3 $$4 $line($$1,$$2,1)
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_fix_line {
  if ($0 != 4) {
    echo -ag Usage: /ratsignal_fix_line <SOURCEWINDOW> <LINE> <matchtext> <replacetext>
    echo -ag <matchtext> and <replacetext> must not contain spaces
  }
  rline -l $$1 $$2 $replace($line($$1,$$2,1),$3,$4)
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias replace_multiple_spaces {
  return $regsubex($1-,\([ ]{2,}\),$chr(32))
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias fix_spaces {
  if ($left($1-,1) == $chr(32)) return Leading space
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_rename {
  if ($0 < 3) {
    echo -ag Rename existing client record on the specified table. Usage: ratsignal_rename <OLDNICK> <NEWNICK> <TABLE>
    return
  }
  if ($hget($3,$hfind($3,$1,1)) != $null) {
    hadd -m $3 $2 $hget($3,$hfind($3,$1,1))
    ;  dline -l %ratsignal.WINDOWNAME $fline(%ratsignal.WINDOWNAME,/.* $+ $1 $+ .*/i,1,3)
    hdel $3 $1 $hget($3,$hfind($3,$1,1))
  }
  else echo -ag $1 not found in $3
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_copy_active {
  if ($0 < 2) { echo -ag Usage: ratsignal_copy_active IRCNICK fromtable | return }
  if ($hget($2) != $2) { echo -ag Invalid hash table: $2 | return }
  if $hget($2,$hfind($2,$1,1)) {
    hadd -m ratsignal_active $1 $hget($2,$hfind($2,$1,1))
  }
  else echo -ag $1 not found in $2
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_copy_inactive {
  if ($0 < 2) { echo -ag Usage: ratsignal_copy_inactive IRCNICK fromtable | return }
  if ($hget($2) != $2) { echo -ag Invalid hash table: $2 | return }
  if $hget($2,$hfind($2,$1,1)) {
    hadd -m ratsignal_inactive $1 $hget($2,$hfind($2,$1,1))
  }
  else echo -ag $1 not found in $2
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_move_active {
  ; Usage
  ; ratsignal_move_active IRCNICK fromtable
  if ($hget($2) != $2) { echo -ag Invalid hash table: $2 | return }
  if $hget($2,$hfind($2,$1,1)) {
    hadd -m ratsignal_active $1 $hget($2,$hfind($2,$1,1))
    hdel $2 $1 $hget($2,$hfind($2,$1,1))
  }
  else echo -ag $1 not found in $2
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_move_inactive {
  ; Usage
  ; ratsignal_move_inactive IRCNICK fromtable
  if ($hget($2) != $2) { echo -ag Invalid hash table: $2 | return }
  if $hget($2,$hfind($2,$1,1)) {
    hadd -m ratsignal_inactive $1 $hget($2,$hfind($2,$1,1))
    hdel $2 $1 $hget($2,$hfind($2,$1,1))
  }
  else echo -ag $1 not found in $2
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_repopulate_listbox_active {
  clear -l %ratsignal.WINDOWNAME
  var %i = 1
  ;iterate
  while ($hget(ratsignal_active, %i).item) {
    ;do stuff
    ;echo 0 -a %i $ctime_to_asctime($replace($hget(ratsignal_active, $v1),$chr(59),$chr(124)))
    iline -l %ratsignal.WINDOWNAME %i $ctime_to_asctime($replace($hget(ratsignal_active, $v1),$chr(59),$chr(124)))
    inc %i
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_repopulate_listbox_inactive {
  clear -l %ratsignal.WINDOWNAME
  var %i = 1
  ;iterate
  while ($hget(ratsignal_inactive, %i).item) {
    ;do stuff
    ;echo 14 -a %i $ctime_to_asctime($replace($hget(ratsignal_inactive, $v1),$chr(59),$chr(124)))
    iline -l %ratsignal.WINDOWNAME %i $ctime_to_asctime($replace($hget(ratsignal_inactive, $v1),$chr(59),$chr(124)))
    inc %i
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_list_tables {
  var %i = 1
  while ($hget(ratsignal_active, %i).item) {
    echo 0 -ag %i $ctime_to_asctime($replace($hget(ratsignal_active, $v1),$chr(59),$chr(124)))
    inc %i
  }
  echo 0 -ag -
  if ($1 == -a) halt

  var %i = 1
  while ($hget(ratsignal_inactive, %i).item) {
    echo 14 -ag %i $ctime_to_asctime($replace($hget(ratsignal_inactive, $v1),$chr(59),$chr(124)))
    inc %i
  }
  echo 14 -ag -
  if ($1 == -i) halt

  ;  var %i = 1
  ;  while ($hget(ratsignal_cleared, %i).item) {
  ;    echo 15 -ag %i $ctime_to_asctime($ctime_to_asctime($replace($hget(ratsignal_cleared, $v1),$chr(59),$chr(124))))
  ;    inc %i
  ;  }
  ;  echo 15 -ag -
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_set_hourly_hash {
  if (Case #99 isin $1-) return
  hadd -mu604800 ratsignal_count ratsignal.d07. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu518400 ratsignal_count ratsignal.d06. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu432000 ratsignal_count ratsignal.d05. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu345600 ratsignal_count ratsignal.d04. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu259200 ratsignal_count ratsignal.d03. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu172800 ratsignal_count ratsignal.d02. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu86400 ratsignal_count ratsignal.h24. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu82800 ratsignal_count ratsignal.h23. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu79200 ratsignal_count ratsignal.h22. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu75600 ratsignal_count ratsignal.h21. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu72000 ratsignal_count ratsignal.h20. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu68400 ratsignal_count ratsignal.h19. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu64800 ratsignal_count ratsignal.h18. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu61200 ratsignal_count ratsignal.h17. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu57600 ratsignal_count ratsignal.h16. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu54000 ratsignal_count ratsignal.h15. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu50400 ratsignal_count ratsignal.h14. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu46800 ratsignal_count ratsignal.h13. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu43200 ratsignal_count ratsignal.h12. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu39600 ratsignal_count ratsignal.h11. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu36000 ratsignal_count ratsignal.h10. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu32400 ratsignal_count ratsignal.h09. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu28800 ratsignal_count ratsignal.h08. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu25200 ratsignal_count ratsignal.h07. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu21600 ratsignal_count ratsignal.h06. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu18000 ratsignal_count ratsignal.h05. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu14400 ratsignal_count ratsignal.h04. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu10800 ratsignal_count ratsignal.h03. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu7200 ratsignal_count ratsignal.h02. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu3600 ratsignal_count ratsignal.h01. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu2700 ratsignal_count ratsignal.m45. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu1800 ratsignal_count ratsignal.m30. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
  hadd -mu900 ratsignal_count ratsignal.m15. [ $+ [ $asctime(yyyy/mm/dd) ] $+ . $+ [ $asctime(HH:nn:ss) ] ] $1-
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignalTEST_log_reload {
  loadbuf 250 -rm %ratsignal.WINDOWNAME $logdir $+ %ratsignal.WINDOWNAME $+ .log
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Text to speech called on RATSIGNAL noting platform and o2 status
alias ratsignal_speak {
  if (%ratsignal.speak.override == $true) {
    ;--------------------------------------------
    if (Platform: PC isin $strip($1-)) {
      if (%ratsignal.speak.pc == $true) myspeak Rat signal
    }
    if (Platform: XB isin $strip($1-)) {
      if (%ratsignal.speak.xbox == $true) myspeak Rat signal Xbox
    }
    if (O2: NOT isin $strip($1-)) myspeak Oh Shit
    ;--------------------------------------------
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
;;; Sets mIRC's wave volume to %speakvolume before TTS events are fired. Set manually or through the %ratsignal.WINDOWNAME menu
alias myspeak {
  if ($away == $false) {
    vol -w %speakvolume
    speak $1-
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_import_ini {
  ;hadd -m ratsignal_import
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

















---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
on *:DIALOG:ratsignal_hashtables:init:0: {
  ratsignal_hashtable_dialog_populate
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ON *:DIALOG:ratsignal_hashtables:uclick:*: {
  ratsignal_hashtable_dialog_populate
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ON *:DIALOG:ratsignal_hashtables:rclick:*: {
  ratsignal_hashtable_dialog_populate
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
alias ratsignal_hashtable_dialog_populate {
  did -r ratsignal_hashtables 5
  did -r ratsignal_hashtables 6
  did -r ratsignal_hashtables 7
  did -r ratsignal_hashtables 8
  did -r ratsignal_hashtables 10

  var %i = 1
  while ($hget(ratsignal_active, %i).item) {
    did -a ratsignal_hashtables 5 $strip($ctime_to_asctime($replace($hget(ratsignal_active, $v1),$chr(59),$chr(124))))
    inc %i
  }
  var %i = 1
  while ($hget(ratsignal_casenum, %i).item) {
    did -a ratsignal_hashtables 8 $hget(ratsignal_casenum, %i).item $ctime_to_asctime($hget(ratsignal_casenum, $v1))
    inc %i
  }
  var %i = 1
  while ($hget(ratsignal_inactive, %i).item) {
    did -a ratsignal_hashtables 6 $strip($ctime_to_asctime($replace($hget(ratsignal_inactive, $v1),$chr(59),$chr(124))))
    inc %i
  }
  var %i = 1
  while ($hget(ratsignal_cleared, %i).item) {
    did -a ratsignal_hashtables 7 $strip($ctime_to_asctime($ctime_to_asctime($replace($hget(ratsignal_cleared, $v1),$chr(59),$chr(124)))))
    inc %i
  }
  var %i = 1
  while ($hget(ratsignal_uuid, %i).item) {
    did -a ratsignal_hashtables 10 $hget(ratsignal_uuid, %i).item $hget(ratsignal_uuid, $v1)
    inc %i
  }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
dialog ratsignal_hashtables {
  title "Ratsignal!"
  size -1 -1 763 590
  text "Cleared Log (ratsignal_cleared)", 3, 4 539 185 17
  text "Active (ratsignal_active)", 9, 4 5 150 17
  text "Inactive (ratsignal_inactive)", 1, 4 191 150 17
  text "Last client to use case # (ratsignal_casenum)", 2, 4 375 234 17
  list 5, 15 22 735 179, vsbar
  list 6, 15 208 737 179, vsbar
  combo 7, 16 557 740 22, drop sort
  list 8, 14 392 273 150, vsbar sort
  text "Captured UUIDs (ratsignal_uuid)", 4, 290 375 169 17
  list 10, 290 392 461 160, vsbar sort
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




















menu @RatsignalTEST {
  -
  Daily $hfind(ratsignal_count,ratsignal.h24*,0,w) | Max $ctime_to_asctime($hget(ratsignal_count,_h24.max))
  .-Hr | R@ | Î”
  .Days
  ..07d | $base($hfind(ratsignal_count,*d07*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*d07*,0,w) - $hfind(ratsignal_count,*d06*,0,w)): halt
  ..06d | $base($hfind(ratsignal_count,*d06*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*d06*,0,w) - $hfind(ratsignal_count,*d05*,0,w)): halt
  ..05d | $base($hfind(ratsignal_count,*d05*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*d05*,0,w) - $hfind(ratsignal_count,*d04*,0,w)): halt
  ..04d | $base($hfind(ratsignal_count,*d04*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*d04*,0,w) - $hfind(ratsignal_count,*d03*,0,w)): halt
  ..03d | $base($hfind(ratsignal_count,*d03*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*d03*,0,w) - $hfind(ratsignal_count,*d02*,0,w)): halt
  ..02d | $base($hfind(ratsignal_count,*d02*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*d02*,0,w) - $hfind(ratsignal_count,*h24*,0,w)): halt
  .24h | $base($hfind(ratsignal_count,ratsignal.h24*,0,w),10,10,2) | $calc($hfind(ratsignal_count,ratsignal.h24*,0,w) - $hfind(ratsignal_count,*h23*,0,w)): halt
  .23h | $base($hfind(ratsignal_count,*h23*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h23*,0,w) - $hfind(ratsignal_count,*h22*,0,w)): halt
  .22h | $base($hfind(ratsignal_count,*h22*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h22*,0,w) - $hfind(ratsignal_count,*h21*,0,w)): halt
  .21h | $base($hfind(ratsignal_count,*h21*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h21*,0,w) - $hfind(ratsignal_count,*h20*,0,w)): halt
  .20h | $base($hfind(ratsignal_count,*h20*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h20*,0,w) - $hfind(ratsignal_count,*h19*,0,w)): halt
  .19h | $base($hfind(ratsignal_count,*h19*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h19*,0,w) - $hfind(ratsignal_count,*h18*,0,w)): halt
  .18h | $base($hfind(ratsignal_count,*h18*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h18*,0,w) - $hfind(ratsignal_count,*h17*,0,w)): halt
  .17h | $base($hfind(ratsignal_count,*h17*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h17*,0,w) - $hfind(ratsignal_count,*h16*,0,w)): halt
  .16h | $base($hfind(ratsignal_count,*h16*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h16*,0,w) - $hfind(ratsignal_count,*h15*,0,w)): halt
  .15h | $base($hfind(ratsignal_count,*h15*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h15*,0,w) - $hfind(ratsignal_count,*h14*,0,w)): halt
  .14h | $base($hfind(ratsignal_count,*h14*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h14*,0,w) - $hfind(ratsignal_count,*h13*,0,w)): halt
  .13h | $base($hfind(ratsignal_count,*h13*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h13*,0,w) - $hfind(ratsignal_count,*h12*,0,w)): halt
  .12h | $base($hfind(ratsignal_count,*h12*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h12*,0,w) - $hfind(ratsignal_count,*h11*,0,w)): halt
  .11h | $base($hfind(ratsignal_count,*h11*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h11*,0,w) - $hfind(ratsignal_count,*h10*,0,w)): halt
  .10h | $base($hfind(ratsignal_count,*h10*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h10*,0,w) - $hfind(ratsignal_count,*h09*,0,w)): halt
  .09h | $base($hfind(ratsignal_count,*h09*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h09*,0,w) - $hfind(ratsignal_count,*h08*,0,w)): halt
  .08h | $base($hfind(ratsignal_count,*h08*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h08*,0,w) - $hfind(ratsignal_count,*h07*,0,w)): halt
  .07h | $base($hfind(ratsignal_count,*h07*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h07*,0,w) - $hfind(ratsignal_count,*h06*,0,w)): halt
  .06h | $base($hfind(ratsignal_count,*h06*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h06*,0,w) - $hfind(ratsignal_count,*h05*,0,w)): halt
  .05h | $base($hfind(ratsignal_count,*h05*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h05*,0,w) - $hfind(ratsignal_count,*h04*,0,w)): halt
  .04h | $base($hfind(ratsignal_count,*h04*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h04*,0,w) - $hfind(ratsignal_count,*h03*,0,w)): halt
  .03h | $base($hfind(ratsignal_count,*h03*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h03*,0,w) - $hfind(ratsignal_count,*h02*,0,w)): halt
  .02h | $base($hfind(ratsignal_count,*h02*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h02*,0,w) - $hfind(ratsignal_count,*h01*,0,w)): halt
  .01h | $base($hfind(ratsignal_count,*h01*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*h01*,0,w) - $hfind(ratsignal_count,*m45*,0,w)): halt
  .$chr(46) $+ 75h | $base($hfind(ratsignal_count,*m45*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*m45*,0,w) - $hfind(ratsignal_count,*m30*,0,w)): halt
  .Â Â½h | $base($hfind(ratsignal_count,*m30*,0,w),10,10,2) | $calc($hfind(ratsignal_count,*m30*,0,w) - $hfind(ratsignal_count,*m15*,0,w)): halt
  .Â Â¼h | $base($hfind(ratsignal_count,*m15*,0,w),10,10,2): halt
  -
  Insert Missed Ratsignal: {
    var %missed_nick = $$?="IRC Nickname? (no spaces)"
    var %missed_case = $$?="Case #? (include the #)"
    var %missed_cred = $$?="O2: OK, NOT OK?"
    var %missed_plat = $$?="Platform?"
    var %missed_sys = $$?="System?"
    var %missed_when = $$?="When? (23:59:59 Thu 12)"
    hadd ratsignal_active %missed_nick %missed_nick $chr(59) %missed_case $chr(59) %missed_cred $chr(59) %missed_plat $chr(59) %missed_sys $chr(59) 7English $chr(59) $ctime(%missed_when)
    ;;; TODO: add this to the listbox
  }
  -
  $iif($sline(%ratsignal.WINDOWNAME,1).ln,Delete Line $sline(%ratsignal.WINDOWNAME,1).ln)
  .Confirm:dline -l %ratsignal.WINDOWNAME $sline(%ratsignal.WINDOWNAME,1).ln
  -
  $$iif(%ratsignal.test.flag == $true,Hashtable Viewer): dialog -md ratsignal_hashtables ratsignal_hashtables
  -
  $iif($regex($cb,/[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}/),View case by UUID (from clipboard)): run -p http://api.fuelrats.com/rescues/view/ $+ $cb
  -
  $$iif(%ratsignal.test.flag == $true,Test Signals)
  .$$iif(%ratsignal.test.flag == $true,Insert)
  ..Test Spaces:ratsignal_parse_0 RATSIGNAL - CMDR I Like Spaces - System: Foo - Platform: PC - O2: 4NOT OK - Language: English (en-US) - IRC Nickname: I_Like_Spaces (Case #99)
  ..Test NSpace:ratsignal_parse_0 RATSIGNAL - CMDR IHateSpaces - System: Foo - Platform: PC - O2: 4NOT OK - Language: English (en-US) (Case #99)
  ..Ratsignal?:ratsignal_parse_0 $$?="Enter Ratsignal line to add"
  .Clear
  ..I Like Spaces:ratsignal_clear_0 I Like Spaces
  ..IHateSpaces:ratsignal_clear_0 IHateSpaces
  ..CMDR?:ratsignal_clear_0 $$?="Enter CMDR name to clear"
  -
  $iif(%ratsignal.test.flag == $true,Echo Last)
  .$iif(%ratsignal.test.flag == $true,Filtered):echo @TEST 11CMDR  $+ %ratsignal.TEMP.CMDR $+  %ratsignal.TEMP.CASE %ratsignal.TEMP.PLATFORM %ratsignal.TEMP.SYSTEM %ratsignal.TEMP.LANG
  .$iif(%ratsignal.test.flag == $true,Full):echo @TEST %ratsignal.TEMP.LINE
  .$iif(%ratsignal.test.flag == $true,Both): {
    echo @TEST 11CMDR  $+ %ratsignal.TEMP.CMDR $+  %ratsignal.TEMP.CASE %ratsignal.TEMP.PLATFORM %ratsignal.TEMP.SYSTEM %ratsignal.TEMP.LANG
    echo @TEST %ratsignal.TEMP.LINE
  }
  .$iif(%ratsignal.test.flag == $true,All): {
    echo @TEST %ratsignal.TEMP.CMDR
    echo @TEST %ratsignal.TEMP.NICK
    echo @TEST %ratsignal.TEMP.CASE
    echo @TEST %ratsignal.TEMP.PLATFORM
    echo @TEST %ratsignal.TEMP.SYSTEM
    echo @TEST %ratsignal.TEMP.LANG
    echo @TEST %ratsignal.TEMP.CTIME $asctime(%ratsignal.last.ctime,HH:nn:ss mmm dd)
  }
  -
  ;;; Options for TTS of Ratsignals (PC), Xbox, Clears, quits & rejoins of current clients.
  Speak
  .Enabled %ratsignal.speak.override
  ;  ..PC $+ $chr(58) %ratsignal.speak.pc XB $+ $chr(58) %ratsignal.speak.xbox Clears $+ $chr(58) %ratsignal.speak.clears Quits $+ $chr(58) %ratsignal.speak.quits Rejoins $+ $chr(58) %ratsignal.speak.rejoins
  ..Set
  ...All
  ....Set all $true: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 3Enabled.
    set %ratsignal.speak.override $true
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 3Enabled for PC.
    set %ratsignal.speak.pc $true
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 3Enabled for Xbox.
    set %ratsignal.speak.xbox $true
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 3Enabled for clears.
    set %ratsignal.speak.clears $true
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 9Enabled for quits.
    set %ratsignal.speak.quits $true
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 9Enabled for rejoins.
    set %ratsignal.speak.rejoins $true
  }
  ....Set all $false: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 4Disabled for all.
    set %ratsignal.speak.override $false
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 4Disabled for PC.
    set %ratsignal.speak.pc $false
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 4Disabled for Xbox.
    set %ratsignal.speak.xbox $false
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 4Disabled for clears.
    set %ratsignal.speak.clears $false
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 4Disabled for quits.
    set %ratsignal.speak.quits $false
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 4Disabled for rejoins.
    set %ratsignal.speak.rejoins $false
  }
  ...Ratsignals $+ $chr(58) %ratsignal.speak.override
  ....Set Speak Ratsignals $true: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 3Enabled.
    set %ratsignal.speak.override $true
  }
  ....Set Speak Ratsignals $false: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 4Disabled for all.
    set %ratsignal.speak.override $false
  }
  ...PC $+ $chr(58) %ratsignal.speak.pc
  ....Set Speak PC Ratsignals $true: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 3Enabled for PC.
    set %ratsignal.speak.pc $true
  }
  ....Set Speak PC Ratsignals $false: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 4Disabled for PC.
    set %ratsignal.speak.pc $false
  }
  ...Xbox $+ $chr(58) %ratsignal.speak.xbox
  ....Set Speak Xbox Ratsignals $true: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 3Enabled for Xbox.
    set %ratsignal.speak.xbox $true
  }
  ....Set Speak Xbox Ratsignals $false: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 4Disabled for Xbox.
    set %ratsignal.speak.xbox $false
  }
  ...Clears $+ $chr(58) %ratsignal.speak.clears
  ....Set Speak Clears $true: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 3Enabled for clears.
    set %ratsignal.speak.clears $true
  }
  ....Set Speak Clears $false: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 4Disabled for clears.
    set %ratsignal.speak.clears $false
  }
  ...Quits $+ $chr(58) %ratsignal.speak.quits
  ....Set Speak Quits $true: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 3Enabled for quits.
    set %ratsignal.speak.quits $true
  }
  ....Set Speak Quits $false: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 4Disabled for quits.
    set %ratsignal.speak.quits $false
  }
  ...Rejoins $+ $chr(58) %ratsignal.speak.rejoins
  ....Set Speak Rejoins $true: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 3Enabled for rejoins.
    set %ratsignal.speak.rejoins $true
  }
  ....Set Speak Rejoins $false: {
    ;echo -tg %ratsignal.WINDOWNAME 10Speaking 4Disabled for rejoins.
    set %ratsignal.speak.rejoins $false
  }
  ;;; Variable used to set mIRC wave volume before TTS events. 0-65535 range.
  .Speak Volume %speakvolume
  ..Set: set %speakvolume $$?="New volume: 0-65535"
  -
  $iif(%ratsignal.test.flag == $true,Ratsignal Hash)
  .$iif(%ratsignal.test.flag == $true,$hget(ratsignal_active,0).item $+ a $hget(ratsignal_inactive,0).item $+ i $hget(ratsignal_cleared,0).item $+ c $hget(ratsignal_count,0).item $+ $chr(35)): halt
  .$iif(%ratsignal.test.flag == $true,Make/Load) {
    ratsignal_make_htables
  }
  .$iif(%ratsignal.test.flag == $true,Save) {
    hsave -s ratsignal_active ratsignal_active.htb
    hsave -s ratsignal_inactive ratsignal_inactive.htb
    hsave -s ratsignal_cleared ratsignal_cleared.htb
    hsave -s ratsignal_count ratsignal_count.htb
    hsave -s ratsignal_uuid ratsignal_uuid.htb
    hsave -s ratsignal_case# ratsignal_case.htb
  }
  .$iif(%ratsignal.test.flag == $true,Reload) {
    ;hfree -sw ratsignal_*
    ratsignal_make_htables
  }
  -
  $iif(%ratsignal.test.flag == $true,Edit Old Ini File $bytes($file($logdir $+ Ratsignal.ini).size,k) $+ k):/run "C:\Program Files (x86)\Notepad++\notepad++.exe" $logdir $+ Ratsignal.ini
  $iif(%ratsignal.test.flag == $true,Edit Old Log File $bytes($file($logdir $+ @Ratsignal.log).size,k) $+ k):/run "C:\Program Files (x86)\Notepad++\notepad++.exe" $logdir $+ @Ratsignal.log
  -
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
menu channel {
  -
  fuelrats.ini
  .Last Case
  ..$duration($calc($ctime - %ratsignal.TEMP.CTIME),1) ago: halt
  ..CMDR $strip(%ratsignal.TEMP.CMDR): set %ratsignal.TEMP.CMDR $$?="New last CMDR?"
  ..IRC Nick $+ $chr(58) $strip(%ratsignal.TEMP.NICK): set %ratsignal.TEMP.NICK $$?="New last NICK?"
  ..Case $+ $chr(58) $strip(%ratsignal.TEMP.CASE): halt
  ..Platform $+ $chr(58) $strip(%ratsignal.TEMP.PLATFORM): halt
  ..System $+ $chr(58) $strip(%ratsignal.TEMP.system): set %ratsignal.TEMP.SYSTEM $$?="New last system?"
  ..Language $+ $chr(58) $strip(%ratsignal.TEMP.LANG): halt
  .Last Clear
  ..CMDR %ratsignal.CLEARED: halt
  ..1st Limpet $+ $chr(58) %ratsignal.CLEARED_RAT: halt
  ..PW $+ $chr(58) %ratsignal.CLEARED_PW: run %ratsignal.CLEARED_PW
  ..Duration $+ $chr(58) $duration($calc($gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.CLEARED_NICK,1)),8,59) - $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.CLEARED_NICK,1)),7,59)),1): halt
  ..Cleared $+ $chr(58) $duration($calc($ctime - $gettok($hget(ratsignal_cleared,$hfind(ratsignal_cleared,%ratsignal.CLEARED_NICK,1)),8,59)),1) ago: halt
  ;;; Some Dispatch & Rat commands and lingo
  .-
  .!kgbfoam: msg #fuelrats !kgbfoam $?="CMDR Name?"
  .!list: msg MechaSqueak[BOT] !list
  .-
  .Rat
  ..fr+: msg #fuelrats fr+
  ..fr-: msg #fuelrats fr-
  ..wr+: msg #fuelrats wr+
  ..wr-: msg #fuelrats wr-
  ..bc+: msg #fuelrats bc+
  ..bc-: msg #fuelrats bc-
  ..inst+: msg #fuelrats inst+
  ..inst-: msg #fuelrats inst-
  ..fuel+: msg #fuelrats fuel+
  ..fuel-: msg #fuelrats fuel-
  ..db+: msg #fuelrats db+
  ..pw-: msg #fuelrats pw+
  .Dispatch
  ..!prep: msg #fuelrats !prep $$?="Case# / CMDR Name?"
  ..!assign|!add|!go: msg #fuelrats !assign $$?="Case# / CMDR Name?" $$?="Rat(s)?"
  ..!unassign: msg #fuelrats !unassign $$?="Case# / CMDR Name?" $$?="Rat(s)?"
  ..!active: msg #fuelrats !active $$?="Case# / CMDR Name?"
  ..!sc: msg #fuelrats !sc $$?="CMDR Name?"
  ..!cr: msg #ratchat !cr $$?="Case# to mark CODE RED?"
  ..!cmdr: msg #ratchat !cmdr $$?="Case#?" $$?="New CMDR Name?"
  ..!ircnick: msg #ratchat !ircnick $$?="Case#/CMDR Name?" $$?="New IRC Nick?"
  ..!sys: msg #ratchat !sys $$?="Case#?" $$?="New System Name?"
  ..!clear|!close: msg #ratchat !clear $$?="Case# / Client to CLEAR?" $?="First limpet?"
  ..!md: msg #ratchat !md $$?="Case# / Client to Mark for Deletion?" $?="What?" $?="Reason?"
  ..!inject: msg #ratchat !inject $$?="Case# / Client to add INJECT?" $$?="What?"
  ..!grab: msg #ratchat !grab $$?="Client to GRAB last line of text?"
  ..PC
  ...!pcfr: msg #fuelrats !pcfr $$?="CMDR Name?"
  ...!pcwing: msg #fuelrats !pcwing $$?="CMDR Name?"
  ...!pcbeacon: msg #fuelrats !pcbeacon $$?="CMDR Name?"
  ...!pcquit: msg #fuelrats !pcquit $$?="CMDR Name?"
  ...!pcmodules: msg #fuelrats !pcmodules $$?="CMDR Name?"
  ...!pc: msg #ratchat !pc $$?="Client to set PC?"
  ..XB
  ...!xbfr: msg #fuelrats !xbfr $$?="CMDR Name?"
  ...!xwing: msg #fuelrats !xwing $$?="CMDR Name?"
  ...!xbeacon: msg #fuelrats !xbeacon $$?="CMDR Name?"
  ...!xquit: msg #fuelrats !xquit $$?="CMDR Name?"
  ...!xmodules: msg #fuelrats !xmodules $$?="CMDR Name?"
  ...!xb: msg #ratchat !xb $$?="Client to set XBox?"
  -
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
menu query {
  -
  $iif($$1 == MechaSqueak[BOT],MechaSqueak[BOT])
  .$iif($$1 == MechaSqueak[BOT],Clear Window):clear
  .$iif($$1 == MechaSqueak[BOT],Current Cases)
  ..$iif($$1 == MechaSqueak[BOT],Cases (!list)):msg $$1 !list
  ..$iif($$1 == MechaSqueak[BOT],Assigned Rats (!list -r)):msg $$1 !list -r
  ..$iif($$1 == MechaSqueak[BOT],UUID (!list -@)):msg $$1 !list -@
  ..$iif($$1 == MechaSqueak[BOT],Inactive (!list -i)):msg $$1 !list -i
  ..$iif($$1 == MechaSqueak[BOT],Unassigned (!list -u)):msg $$1 !list -u
  .$iif($$1 == MechaSqueak[BOT],Search Last System)
  ..!search  $strip(%ratsignal.temp.system):msg $$1 !search $strip(%ratsignal.temp.system)
  .$iif($$1 == MechaSqueak[BOT],Search ?):msg $$1 !search $$?="System?"
  .$iif($$1 == MechaSqueak[BOT],Quote $chr(35)):msg $$1 !quote $$?="Which case #?"
  .$iif($$1 == MechaSqueak[BOT],Help):msg $$1 !help
  -
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
